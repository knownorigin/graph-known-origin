specVersion: 0.0.2
description: KnownOrigin.io subgraph
repository: https://github.com/knownorigin/graph-known-origin
schema:
  file: ./schema.graphql
dataSources:
  ## KODA V1 (Alpha)
  - kind: ethereum/contract
    name: KnownOriginV1
    network: {{network}}
    source:
      address: '{{koda-v1-address}}'
      abi: KnownOriginV1
      startBlock: {{koda-v1-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: KnownOriginV1
          file: ./abis/KnownOriginV1.json
      eventHandlers:
        #        - event: Transfer(indexed address,indexed address,uint256)
        #          handler: handleTransfer
        - event: PurchasedWithEther(indexed uint256,indexed address)
          handler: handlePurchase
      file: ./src/mappings/known-origin-v1-mapping.ts

  ## KODA V2 (Current)
  - kind: ethereum/contract
    name: KnownOrigin
    network: {{network}}
    source:
      address: '{{koda-v2-address}}'
      abi: KnownOrigin
      startBlock: {{koda-v2-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Transfer
        - EditionCreated
      abis:
        - name: KnownOrigin
          file: ./abis/KnownOrigin.json
      eventHandlers:
        # All transfers to/from regardless of on KO or not
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer

          # Every edition created emits one of these
        - event: EditionCreated(indexed uint256,indexed bytes32,indexed uint256)
          handler: handleEditionCreated

          # Emitted on purchases from within this contract
        - event: Purchase(indexed uint256,indexed uint256,indexed address,uint256)
          handler: handlePurchase

          # Emitted on ever token creation event regardless of purchase, gift, auction etc
        - event: Minted(indexed uint256,indexed uint256,indexed address)
          handler: handleMinted
    {{#includeCallHandlers}}
      # Some things we need to watch method calls for
      # For price changes we can listen to `PriceChanged` event from ArtistControls
      # For others ... I dont have a solution other than force deploying to refresh the data
      callHandlers:
        - function: updateActive(uint256,bool)
          handler: handleUpdateActive
      #        - function: updateArtistsAccount(uint256,address)
      #          handler: handleUpdateArtistsAccount
      #        - function: updateArtistCommission(uint256,uint256)
      #          handler: handleUpdateArtistCommission
      #        - function: updatePriceInWei(uint256,uint256)
      #          handler: handleUpdatePriceInWei
    {{/includeCallHandlers}}
      file: ./src/mappings/known-origin-v2-mapping.ts

  ## Auctions V1 (Deprecated)
  - kind: ethereum/contract
    name: ArtistAcceptingBidsV1
    network: {{network}}
    source:
      address: '{{auction-v1-address}}'
      abi: ArtistAcceptingBidsV1
      startBlock: {{auction-v1-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - AuctionEnabled
      abis:
        - name: ArtistAcceptingBidsV1
          file: ./abis/ArtistAcceptingBidsV1.json
        - name: KnownOrigin
          file: ./abis/KnownOrigin.json
      eventHandlers:
        - event: BidPlaced(indexed address,indexed uint256,indexed uint256)
          handler: handleBidPlaced

        - event: BidAccepted(indexed address,indexed uint256,indexed uint256,uint256)
          handler: handleBidAccepted

        - event: BidWithdrawn(indexed address,indexed uint256)
          handler: handleBidWithdrawn

        - event: BidIncreased(indexed address,indexed uint256,indexed uint256)
          handler: handleBidIncreased

        - event: BidderRefunded(indexed uint256,indexed address,indexed uint256)
          handler: handleBidderRefunded

        - event: AuctionCancelled(indexed uint256)
          handler: handleAuctionCancelled
      file: ./src/mappings/auction-v1-mapping.ts

  ## Auctions V2 (Current)
  - kind: ethereum/contract
    name: ArtistAcceptingBidsV2
    network: {{network}}
    source:
      address: '{{auction-v2-address}}'
      abi: ArtistAcceptingBidsV2
      startBlock: {{auction-v2-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - AuctionEnabled
      abis:
        - name: ArtistAcceptingBidsV2
          file: ./abis/ArtistAcceptingBidsV2.json
        - name: KnownOrigin
          file: ./abis/KnownOrigin.json
      eventHandlers:
        - event: AuctionEnabled(indexed uint256,indexed address)
          handler: handleAuctionEnabled

        - event: AuctionCancelled(indexed uint256)
          handler: handleAuctionCancelled

        - event: BidPlaced(indexed address,indexed uint256,uint256)
          handler: handleBidPlaced

        - event: BidAccepted(indexed address,indexed uint256,indexed uint256,uint256)
          handler: handleBidAccepted

        - event: BidRejected(indexed address,indexed address,indexed uint256,uint256)
          handler: handleBidRejected

        - event: BidWithdrawn(indexed address,indexed uint256)
          handler: handleBidWithdrawn

        - event: BidIncreased(indexed address,indexed uint256,uint256)
          handler: handleBidIncreased

        - event: BidderRefunded(indexed uint256,indexed address,uint256)
          handler: handleBidderRefunded
      file: ./src/mappings/auction-v2-mapping.ts

  {{#includeTokenMarketplace}}
  ## TokenMarketplace V! (Current)
  - kind: ethereum/contract
    name: TokenMarketplace
    network: {{network}}
    source:
      address: '{{token-marketplace-v1-address}}'
      abi: TokenMarketplace
      startBlock: {{token-marketplace-v1-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - BidPlaced
        - BidWithdrawn
        - BidAccepted
        - BidRejected
        - AuctionEnabled
        - AuctionDisabled
      abis:
        - name: TokenMarketplace
          file: ./abis/TokenMarketplace.json
        - name: KnownOrigin
          file: ./abis/KnownOrigin.json
      eventHandlers:
        - event: AuctionEnabled(indexed uint256,indexed address)
          handler: handleAuctionEnabled

        - event: AuctionDisabled(indexed uint256,indexed address)
          handler: handleAuctionDisabled

        - event: BidPlaced(indexed uint256,indexed address,indexed address,uint256)
          handler: handleBidPlaced

        - event: BidAccepted(indexed uint256,indexed address,indexed address,uint256)
          handler: handleBidAccepted

        - event: BidRejected(indexed uint256,indexed address,indexed address,uint256)
          handler: handleBidRejected

        - event: BidWithdrawn(indexed uint256,indexed address)
          handler: handleBidWithdrawn

      file: ./src/mappings/token-marketplace-mapping.ts
  {{/includeTokenMarketplace}}
