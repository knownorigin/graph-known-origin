specVersion: 0.0.2
description: KnownOrigin.io subgraph
repository: https://github.com/knownorigin/graph-known-origin
schema:
  file: ./schema.graphql
dataSources:
  ## KODA V1 (Alpha)
  - kind: ethereum/contract
    name: KnownOriginV1
    network: {{network}}
    source:
      address: '{{koda-v1-address}}'
      abi: KnownOriginV1
      startBlock: {{koda-v1-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: KnownOriginV1
          file: ./abis/kodav2/KnownOriginV1.json
      eventHandlers:
        #        - event: Transfer(indexed address,indexed address,uint256)
        #          handler: handleTransfer
        - event: PurchasedWithEther(indexed uint256,indexed address)
          handler: handlePurchase
      file: ./src/mappings/known-origin-v1-mapping.ts

  ## KODA V2 (Current)
  - kind: ethereum/contract
    name: KnownOriginV2
    network: {{network}}
    source:
      address: '{{koda-v2-address}}'
      abi: KnownOriginV2
      startBlock: {{koda-v2-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Transfer
        - EditionCreated
      abis:
        - name: KnownOriginV2
          file: ./abis/kodav2/KnownOriginV2.json
      eventHandlers:
        # All transfers to/from regardless of on KO or not
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer

          # Every edition created emits one of these
        - event: EditionCreated(indexed uint256,indexed bytes32,indexed uint256)
          handler: handleEditionCreated

          # Emitted on purchases from within this contract
        - event: Purchase(indexed uint256,indexed uint256,indexed address,uint256)
          handler: handlePurchase

          # Emitted on ever token creation event regardless of purchase, gift, auction etc
        - event: Minted(indexed uint256,indexed uint256,indexed address)
          handler: handleMinted
      file: ./src/mappings/known-origin-v2-mapping.ts

  ## Auctions V1 (Deprecated)
  - kind: ethereum/contract
    name: ArtistAcceptingBidsV1
    network: {{network}}
    source:
      address: '{{auction-v1-address}}'
      abi: ArtistAcceptingBidsV1
      startBlock: {{auction-v1-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - AuctionEnabled
      abis:
        - name: ArtistAcceptingBidsV1
          file: ./abis/kodav2/ArtistAcceptingBidsV1.json
        - name: KnownOriginV2
          file: ./abis/kodav2/KnownOriginV2.json
      eventHandlers:
        - event: BidPlaced(indexed address,indexed uint256,indexed uint256)
          handler: handleBidPlaced

        - event: BidAccepted(indexed address,indexed uint256,indexed uint256,uint256)
          handler: handleBidAccepted

        - event: BidWithdrawn(indexed address,indexed uint256)
          handler: handleBidWithdrawn

        - event: BidIncreased(indexed address,indexed uint256,indexed uint256)
          handler: handleBidIncreased

        - event: BidderRefunded(indexed uint256,indexed address,indexed uint256)
          handler: handleBidderRefunded

        - event: AuctionCancelled(indexed uint256)
          handler: handleAuctionCancelled
      file: ./src/mappings/auction-v1-mapping.ts

  ## Auctions V2 (Current)
  - kind: ethereum/contract
    name: ArtistAcceptingBidsV2
    network: {{network}}
    source:
      address: '{{auction-v2-address}}'
      abi: ArtistAcceptingBidsV2
      startBlock: {{auction-v2-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - AuctionEnabled
      abis:
        - name: ArtistAcceptingBidsV2
          file: ./abis/kodav2/ArtistAcceptingBidsV2.json
        - name: KnownOriginV2
          file: ./abis/kodav2/KnownOriginV2.json
      eventHandlers:
        - event: AuctionEnabled(indexed uint256,indexed address)
          handler: handleAuctionEnabled

        - event: AuctionCancelled(indexed uint256)
          handler: handleAuctionCancelled

        - event: BidPlaced(indexed address,indexed uint256,uint256)
          handler: handleBidPlaced

        - event: BidAccepted(indexed address,indexed uint256,indexed uint256,uint256)
          handler: handleBidAccepted

        - event: BidRejected(indexed address,indexed address,indexed uint256,uint256)
          handler: handleBidRejected

        - event: BidWithdrawn(indexed address,indexed uint256)
          handler: handleBidWithdrawn

        - event: BidIncreased(indexed address,indexed uint256,uint256)
          handler: handleBidIncreased

        - event: BidderRefunded(indexed uint256,indexed address,uint256)
          handler: handleBidderRefunded
      file: ./src/mappings/auction-v2-mapping.ts

  ## TokenMarketplace V1 (Current)
  - kind: ethereum/contract
    name: TokenMarketplace
    network: {{network}}
    source:
      address: '{{token-marketplace-v1-address}}'
      abi: TokenMarketplace
      startBlock: {{token-marketplace-v1-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - BidPlaced
        - BidWithdrawn
        - BidAccepted
        - BidRejected
        - AuctionEnabled
        - AuctionDisabled
      abis:
        - name: TokenMarketplace
          file: ./abis/kodav2/TokenMarketplace.json
        - name: KnownOriginV2
          file: ./abis/kodav2/KnownOriginV2.json
      eventHandlers:
        - event: AuctionEnabled(indexed uint256,indexed address)
          handler: handleAuctionEnabled

        - event: AuctionDisabled(indexed uint256,indexed address)
          handler: handleAuctionDisabled

        - event: BidPlaced(indexed uint256,indexed address,indexed address,uint256)
          handler: handleBidPlaced

        - event: BidAccepted(indexed uint256,indexed address,indexed address,uint256)
          handler: handleBidAccepted

        - event: BidRejected(indexed uint256,indexed address,indexed address,uint256)
          handler: handleBidRejected

        - event: BidWithdrawn(indexed uint256,indexed address)
          handler: handleBidWithdrawn

      file: ./src/mappings/token-marketplace-mapping.ts

  ## TokenMarketplace V2 (Current)
  - kind: ethereum/contract
    name: TokenMarketplaceV2
    network: {{network}}
    source:
      address: '{{token-marketplace-v2-address}}'
      abi: TokenMarketplaceV2
      startBlock: {{token-marketplace-v2-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - AuctionEnabled
        - AuctionDisabled
        - BidPlaced
        - BidWithdrawn
        - BidAccepted
        - BidRejected
        - AuctionEnabled
        - AuctionDisabled
        - TokenPurchased
        - TokenDeListed
        - TokenListed
      abis:
        - name: TokenMarketplaceV2
          file: ./abis/kodav2/TokenMarketplaceV2.json
        - name: KnownOriginV2
          file: ./abis/kodav2/KnownOriginV2.json
      eventHandlers:
        - event: AuctionEnabled(indexed uint256,indexed address)
          handler: handleAuctionEnabled

        - event: AuctionDisabled(indexed uint256,indexed address)
          handler: handleAuctionDisabled

        - event: BidPlaced(indexed uint256,indexed address,indexed address,uint256)
          handler: handleBidPlaced

        - event: BidAccepted(indexed uint256,indexed address,indexed address,uint256)
          handler: handleBidAccepted

        - event: BidRejected(indexed uint256,indexed address,indexed address,uint256)
          handler: handleBidRejected

        - event: BidWithdrawn(indexed uint256,indexed address)
          handler: handleBidWithdrawn

        - event: TokenListed(indexed uint256,indexed address,uint256)
          handler: handleTokenListed

        - event: TokenDeListed(indexed uint256)
          handler: handleTokenDeListed

        - event: TokenPurchased(indexed uint256,indexed address,indexed address,uint256)
          handler: handleTokenPurchased

      file: ./src/mappings/token-marketplace-v2-mapping.ts

  ## Artist Burner (Current)
  - kind: ethereum/contract
    name: ArtistEditionBurner
    network: {{network}}
    source:
      address: '{{artist-burner-address}}'
      abi: ArtistEditionBurner
      startBlock: {{artist-burner-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - EditionDeactivated
        - EditionSupplyReduced
      abis:
        - name: ArtistEditionBurner
          file: ./abis/kodav2/ArtistEditionBurner.json
        - name: KnownOriginV2
          file: ./abis/kodav2/KnownOriginV2.json
      eventHandlers:
        - event: EditionDeactivated(indexed uint256)
          handler: handleEditionDeactivatedEvent

        - event: EditionSupplyReduced(indexed uint256)
          handler: handleEditionSupplyReducedEvent

      file: ./src/mappings/artist-burner-mapping.ts

  ## Artist Tools V2
  - kind: ethereum/contract
    name: ArtistEditionControlsV2
    network: {{network}}
    source:
      address: '{{artist-edition-controls-v2-address}}'
      abi: ArtistEditionControlsV2
      startBlock: {{artist-edition-controls-v2-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: ArtistEditionControlsV2
          file: ./abis/kodav2/ArtistEditionControlsV2.json
      eventHandlers:
        - event: PriceChanged(indexed uint256,indexed address,uint256)
          handler: handlePriceChangedEvent
      file: ./src/mappings/artist-edition-controls-v2-mapping.ts

  # only include the below in V3
{{#include-koda-v3}}
  ## KODA V3 (V3 NFT)
  - kind: ethereum/contract
    name: KnownOriginV3
    network: {{network}}
    source:
      address: '{{koda-v3-address}}'
      abi: KnownOriginV3
      startBlock: {{koda-v3-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Transfer
        - ConsecutiveTransfer
        - AdminRoyaltiesRegistryProxySet
        - AdminTokenUriResolverSet
        - AdminUpdateSecondaryRoyalty
        - AdminArtistAccountReported
        - AdminEditionReported
        - ApprovalForAll
        - Approval
      abis:
        - name: KnownOriginV3
          file: ./abis/kodav3/KnownOriginV3.json
      eventHandlers:
        # KODA V3 Config
        - event: AdminRoyaltiesRegistryProxySet(indexed address)
          handler: handleAdminRoyaltiesRegistryProxySet
        - event: AdminTokenUriResolverSet(indexed address)
          handler: handleAdminTokenUriResolverSet
        - event: AdminUpdateSecondaryRoyalty(uint256)
          handler: handleAdminUpdateSecondaryRoyalty
        - event: AdminArtistAccountReported(indexed address,indexed bool)
          handler: handleAdminArtistAccountReported
        - event: AdminEditionReported(indexed uint256,indexed bool)
          handler: handleAdminEditionReported

        # All transfers to/from regardless of on KO or not
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: ConsecutiveTransfer(indexed uint256,uint256,indexed address,indexed address)
          handler: handleConsecutiveTransfer

        # Approvals
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
        - event: Approval(indexed address,indexed address,indexed uint256)
          handler: handleApproval
      file: ./src/mappings/v3/known-origin-v3-mapping.ts

      # medium priority
      #
      # (update/burn)
      # EditionURIUpdated
      # EditionSalesDisabledToggled
      #
      # (composable)
      # ReceivedERC20
      # ReceivedERC20ForEdition
      # TransferERC20
      # ContractWhitelisted
      # WhitelistRemoved
      # MaxERC20sPerNFTUpdated
      # ReceivedRoyalties

      # low priority
      #
      # (permweb and unlockable content)
      # AdditionalEditionUnlockableSet
      # AdditionalEditionMetaDataSet

  ## KOAccessControls for KODA V3 (V3 NFT)
  - kind: ethereum/contract
    name: KOAccessControls
    network: {{network}}
    source:
      address: '{{accesscontrols-v3-address}}'
      abi: KOAccessControls
      startBlock: {{accesscontrols-v3-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - AdminUpdateArtistAccessMerkleRoot
        - AdminUpdateArtistAccessMerkleRootIpfsHash
      abis:
        - name: KOAccessControls
          file: ./abis/kodav3/KOAccessControls.json
      eventHandlers:
        - event: AdminUpdateArtistAccessMerkleRoot(bytes32)
          handler: handleAdminUpdateArtistAccessMerkleRoot

        - event: AdminUpdateArtistAccessMerkleRootIpfsHash(string)
          handler: handleAdminUpdateArtistAccessMerkleRootIpfsHash
      file: ./src/mappings/v3/platform-config-mapping.ts

  ## MintingFactory for KODA V3
  - kind: ethereum/contract
    name: MintingFactoryConfig
    network: {{network}}
    source:
      address: '{{koda-v3-minting-factory-address}}'
      abi: MintingFactory
      startBlock: {{koda-v3-minting-factory-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - MintingFactoryCreated
        - AdminMintingPeriodChanged
        - AdminMaxMintsInPeriodChanged
        - AdminFrequencyOverrideChanged
      abis:
        - name: MintingFactory
          file: ./abis/kodav3/MintingFactory.json
        - name: KnownOriginV3
          file: ./abis/kodav3/KnownOriginV3.json
      eventHandlers:
        - event: MintingFactoryCreated()
          handler: handleMintingFactoryCreated
        - event: AdminMintingPeriodChanged(uint256)
          handler: handleAdminMintingPeriodChanged
        - event: AdminMaxMintsInPeriodChanged(uint256)
          handler: handleAdminMaxMintsInPeriodChanged
        - event: AdminFrequencyOverrideChanged(address,bool)
          handler: handleAdminFrequencyOverrideChanged
      file: ./src/mappings/v3/platform-config-mapping.ts

  ## MintingFactory for KODA V3
  - kind: ethereum/contract
    name: MintingFactoryCreations
    network: {{network}}
    source:
      address: '{{koda-v3-minting-factory-address}}'
      abi: MintingFactory
      startBlock: {{koda-v3-minting-factory-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - EditionMintedAndListed
      abis:
        - name: MintingFactory
          file: ./abis/kodav3/MintingFactory.json
        - name: KnownOriginV3
          file: ./abis/kodav3/KnownOriginV3.json
      eventHandlers:
        - event: EditionMintedAndListed(indexed uint256,uint8)
          handler: handleEditionMintedAndListed
      file: ./src/mappings/v3/minting-factory-mapping.ts

  # Token Primary Marketplace V3 (V3 NFT)
  - kind: ethereum/contract
    name: KODAV3PrimaryMarketplace
    network: {{network}}
    source:
      address: '{{koda-v3-primary-marketplace-address}}'
      abi: KODAV3PrimaryMarketplace
      startBlock: {{koda-v3-primary-marketplace-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - AdminUpdatePlatformPrimarySaleCommission
        - AdminUpdateModulo
        - AdminUpdateMinBidAmount
      abis:
        - name: KODAV3PrimaryMarketplace
          file: ./abis/kodav3/KODAV3PrimaryMarketplace.json
        - name: KnownOriginV3
          file: ./abis/kodav3/KnownOriginV3.json
      eventHandlers:
        # Admin handlers
        - event: AdminUpdatePlatformPrimarySaleCommission(uint256)
          handler: handleAdminUpdatePlatformPrimarySaleCommission
        - event: AdminUpdateModulo(uint256)
          handler: handleAdminUpdateModulo
        - event: AdminUpdateMinBidAmount(uint256)
          handler: handleAdminUpdateMinBidAmount

        # Buy Now - primary
        - event: BuyNowPriceChanged(indexed uint256,uint256)
          handler: handleEditionPriceChanged
        - event: ListedForBuyNow(indexed uint256,uint256,address,uint256)
          handler: handleEditionListed
        - event: BuyNowPurchased(indexed uint256,address,address,uint256)
          handler: handleEditionPurchased

        # Offers - primary
        - event: EditionAcceptingOffer(indexed uint256,uint128)
          handler: handleEditionAcceptingOffer
        - event: EditionBidPlaced(indexed uint256,address,uint256)
          handler: handleEditionBidPlaced
        - event: EditionBidWithdrawn(indexed uint256,address)
          handler: handleEditionBidWithdrawn
        - event: EditionBidAccepted(indexed uint256,indexed uint256,address,uint256)
          handler: handleEditionBidAccepted
        - event: EditionBidRejected(indexed uint256,address,uint256)
          handler: handleEditionBidRejected

        # Stepped Sales
        - event: EditionSteppedSaleListed(indexed uint256,uint128,uint128,uint128)
          handler: handleEditionSteppedSaleListed
        - event: EditionSteppedSaleBuy(indexed uint256,indexed uint256,address,uint256,uint16)
          handler: handleEditionSteppedSaleBuy

        # Reserve Auction - data questions to answer
        #   - DONE has the edition reached is reserve price - see: isReserveAuctionInSuddenDeath || reserveAuctionEndTimestamp > 0
        #   - DONE when does the reserve end?
        #       - reserveAuctionEndTimestamp - current end time
        #       - previousReserveAuctionEndTimestamp - after extension - this is set
        #       - reserveAuctionNumTimesExtended - number of times extended into sudden death
        #       - reserveAuctionTotalExtensionLengthInSeconds - total extension time
        #
        #   - DONE - has the reserve moved into sudden death? - see: reserveAuctionNumTimesExtended > 0
        #   - DONE - has the item been resulted and by who? - see: isReserveAuctionResulted, isReserveAuctionResultedDateTime, reserveAuctionResulter
        #   - DONE - model all events, placed, withdraw - copy/look at existing auction logic for this
        #   - DONE - new sale type Edition - SaleTypes.RESERVE_COUNTDOWN_AUCTION (int 5)
        #   - DONE - are we in an emergency exit state? - see: reserveAuctionCanEmergencyExit

        # Reserve Auction
        - event: ListedForReserveAuction(indexed uint256,uint256,uint128)
          handler: handleEditionListedForReserveAuction
        - event: BidPlacedOnReserveAuction(indexed uint256,address,address,uint256,uint256,uint256)
          handler: handleBidPlacedOnReserveAuction
        - event: ReserveAuctionResulted(indexed uint256,uint256,address,address,address)
          handler: handleReserveAuctionResulted
        - event: BidWithdrawnFromReserveAuction(uint256,address,uint128)
          handler: handleBidWithdrawnFromReserveAuction
        - event: ReservePriceUpdated(indexed uint256,uint256)
          handler: handleReservePriceUpdated

        # Sale type conversion methods
        - event: EditionConvertedFromOffersToBuyItNow(uint256,uint128,uint128)
          handler: handleEditionConvertedFromOffersToBuyItNow
        - event: ConvertFromBuyNowToOffers(indexed uint256,uint128)
          handler: handleConvertFromBuyNowToOffers
        - event: ConvertSteppedAuctionToBuyNow(indexed uint256,uint128,uint128)
          handler: handleConvertSteppedAuctionToBuyNow
        - event: ReserveAuctionConvertedToBuyItNow(indexed uint256,uint128,uint128)
          handler: handleReserveAuctionConvertedToBuyItNow
        - event: ReserveAuctionConvertedToOffers(indexed uint256,uint128)
          handler: handleReserveAuctionConvertedToOffers

          # TODO
          #   - event EmergencyBidWithdrawFromReserveAuction(uint256 indexed _id, address _bidder, uint128 _bid);

      file: ./src/mappings/v3/known-origin-v3-primary-marketplace-mapping.ts

  # Token Secondary Marketplace V3 (V3 NFT)
  - kind: ethereum/contract
    name: KODAV3SecondaryMarketplace
    network: {{network}}
    source:
      address: '{{koda-v3-secondary-marketplace-address}}'
      abi: KODAV3SecondaryMarketplace
      startBlock: {{koda-v3-secondary-marketplace-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - AdminUpdateSecondaryRoyalty
        - AdminUpdateSecondarySaleCommission
        - AdminUpdateModulo
        - AdminUpdateMinBidAmount
      abis:
        - name: KODAV3SecondaryMarketplace
          file: ./abis/kodav3/KODAV3SecondaryMarketplace.json
        - name: KnownOriginV3
          file: ./abis/kodav3/KnownOriginV3.json
      eventHandlers:
        # Admin handlers
        - event: AdminUpdateModulo(uint256)
          handler: handleAdminUpdateModulo
        - event: AdminUpdateMinBidAmount(uint256)
          handler: handleAdminUpdateMinBidAmount
        - event: AdminUpdateModulo(uint256)
          handler: handleAdminUpdateModulo

        # TODO
        # AdminUpdateBidLockupPeriod
        # AdminUpdateSecondaryRoyalty
        # AdminUpdateSecondarySaleCommission
        # AdminUpdateReserveAuctionBidExtensionWindow
        # AdminUpdateReserveAuctionLengthOnceReserveMet

        # TODO Reserve
        #    event TokenListedForReserveAuction(uint256 indexed _tokenId, uint256 _reservePrice, uint128 _startDate);
        #    event BidPlacedOnReserveAuction(uint256 indexed _tokenId, address indexed _bidder, uint256 _amount);
        #    event ReserveAuctionResulted(uint256 indexed _tokenId, uint256 _finalPrice, address indexed _winner, address indexed _resulter);
        #    event BidWithdrawnFromReserveAuction(uint256 _tokenId, address indexed _bidder, uint128 _bid);
        #    event ReservePriceUpdated(uint256 indexed _tokenId, uint256 _reservePrice);
        #    event ReserveAuctionConvertedToBuyItNow(uint256 indexed _tokenId, uint128 _listingPrice, uint128 _startDate);

        # marketplace mappings
        - event: ListedForBuyNow(indexed uint256,uint256,address,uint256)
          handler: handleTokenListed
        - event: TokenDeListed(indexed uint256)
          handler: handleTokenDeListed
        - event:  BuyNowPurchased(indexed uint256,address,address,uint256)
          handler: handleTokenPurchased
        - event: TokenBidPlaced(indexed uint256,address,address,uint256)
          handler: handleTokenBidPlaced
        - event: TokenBidAccepted(indexed uint256,address,address,uint256)
          handler: handleTokenBidAccepted
        - event: TokenBidRejected(indexed uint256,address,address,uint256)
          handler: handleTokenBidRejected
        - event: TokenBidWithdrawn(indexed uint256,address)
          handler: handleTokenBidWithdrawn
        - event: BuyNowPriceChanged(indexed uint256,uint256)
          handler: handleBuyNowTokenPriceChanged
      file: ./src/mappings/v3/known-origin-v3-secondary-marketplace-mapping.ts

  # Collab registry
  - kind: ethereum/contract
    name: KODAV3CollabRegistry
    network: {{network}}
    source:
      address: '{{koda-v3-collab-registry-address}}'
      abi: KODAV3CollabRegistry
      startBlock: {{koda-v3-collab-registry-startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - RoyaltyRecipientCreated
        - RoyaltiesHandlerSetup
        - FutureRoyaltiesHandlerSetup
        - HandlerAdded
        - HandlerRemoved
      abis:
        - name: KODAV3CollabRegistry
          file: ./abis/kodav3/KODAV3CollabRegistry.json
      eventHandlers:
        - event: RoyaltyRecipientCreated(address,address,address,address[],uint256[])
          handler: handleRoyaltyRecipientCreated
        - event: RoyaltiesHandlerSetup(uint256,address)
          handler: handleRoyaltiesHandlerSetup
        - event: FutureRoyaltiesHandlerSetup(uint256,address)
          handler: handleFutureRoyaltiesHandlerSetup
        - event: HandlerAdded(address)
          handler: handleHandlerAdded
        - event: HandlerRemoved(address)
          handler: handleHandlerRemoved
      file: ./src/mappings/v3/known-origin-v3-collab-registry-mapping.ts

  {{/include-koda-v3}}
