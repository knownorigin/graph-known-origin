// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Purchase extends ethereum.Event {
  get params(): Purchase__Params {
    return new Purchase__Params(this);
  }
}

export class Purchase__Params {
  _event: Purchase;

  constructor(event: Purchase) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _editionNumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _priceInWei(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Minted extends ethereum.Event {
  get params(): Minted__Params {
    return new Minted__Params(this);
  }
}

export class Minted__Params {
  _event: Minted;

  constructor(event: Minted) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _editionNumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class EditionCreated extends ethereum.Event {
  get params(): EditionCreated__Params {
    return new EditionCreated__Params(this);
  }
}

export class EditionCreated__Params {
  _event: EditionCreated;

  constructor(event: EditionCreated) {
    this._event = event;
  }

  get _editionNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _editionData(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _editionType(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Pause extends ethereum.Event {
  get params(): Pause__Params {
    return new Pause__Params(this);
  }
}

export class Pause__Params {
  _event: Pause;

  constructor(event: Pause) {
    this._event = event;
  }
}

export class Unpause extends ethereum.Event {
  get params(): Unpause__Params {
    return new Unpause__Params(this);
  }
}

export class Unpause__Params {
  _event: Unpause;

  constructor(event: Unpause) {
    this._event = event;
  }
}

export class OwnershipRenounced extends ethereum.Event {
  get params(): OwnershipRenounced__Params {
    return new OwnershipRenounced__Params(this);
  }
}

export class OwnershipRenounced__Params {
  _event: OwnershipRenounced;

  constructor(event: OwnershipRenounced) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdded extends ethereum.Event {
  get params(): RoleAdded__Params {
    return new RoleAdded__Params(this);
  }
}

export class RoleAdded__Params {
  _event: RoleAdded;

  constructor(event: RoleAdded) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class RoleRemoved extends ethereum.Event {
  get params(): RoleRemoved__Params {
    return new RoleRemoved__Params(this);
  }
}

export class RoleRemoved__Params {
  _event: RoleRemoved;

  constructor(event: RoleRemoved) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class KnownOriginV2__artistCommissionResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class KnownOriginV2__purchaseDatesEditionResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class KnownOriginV2__detailsOfEditionResult {
  value0: Bytes;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: Address;
  value5: BigInt;
  value6: BigInt;
  value7: string;
  value8: BigInt;
  value9: BigInt;
  value10: boolean;

  constructor(
    value0: Bytes,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: Address,
    value5: BigInt,
    value6: BigInt,
    value7: string,
    value8: BigInt,
    value9: BigInt,
    value10: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromString(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromBoolean(this.value10));
    return map;
  }
}

export class KnownOriginV2__tokenDataResult {
  value0: BigInt;
  value1: BigInt;
  value2: Bytes;
  value3: string;
  value4: Address;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: Bytes,
    value3: string,
    value4: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromFixedBytes(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }
}

export class KnownOriginV2__purchaseDatesTokenResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class KnownOriginV2__editionOptionalCommissionResult {
  value0: BigInt;
  value1: Address;

  constructor(value0: BigInt, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }
}

export class KnownOriginV2 extends ethereum.SmartContract {
  static bind(address: Address): KnownOriginV2 {
    return new KnownOriginV2("KnownOriginV2", address);
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getApproved(_tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  priceInWeiToken(_tokenId: BigInt): BigInt {
    let result = super.call(
      "priceInWeiToken",
      "priceInWeiToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_priceInWeiToken(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "priceInWeiToken",
      "priceInWeiToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  InterfaceId_ERC165(): Bytes {
    let result = super.call(
      "InterfaceId_ERC165",
      "InterfaceId_ERC165():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_InterfaceId_ERC165(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "InterfaceId_ERC165",
      "InterfaceId_ERC165():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  editionData(_editionNumber: BigInt): Bytes {
    let result = super.call("editionData", "editionData(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(_editionNumber)
    ]);

    return result[0].toBytes();
  }

  try_editionData(_editionNumber: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "editionData",
      "editionData(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  totalPurchaseValueInWei(): BigInt {
    let result = super.call(
      "totalPurchaseValueInWei",
      "totalPurchaseValueInWei():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalPurchaseValueInWei(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalPurchaseValueInWei",
      "totalPurchaseValueInWei():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenOfOwnerByIndex(_owner: Address, _index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    _owner: Address,
    _index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  artistCommission(
    _editionNumber: BigInt
  ): KnownOriginV2__artistCommissionResult {
    let result = super.call(
      "artistCommission",
      "artistCommission(uint256):(address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );

    return new KnownOriginV2__artistCommissionResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_artistCommission(
    _editionNumber: BigInt
  ): ethereum.CallResult<KnownOriginV2__artistCommissionResult> {
    let result = super.tryCall(
      "artistCommission",
      "artistCommission(uint256):(address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new KnownOriginV2__artistCommissionResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  tokenURIEdition(_editionNumber: BigInt): string {
    let result = super.call(
      "tokenURIEdition",
      "tokenURIEdition(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );

    return result[0].toString();
  }

  try_tokenURIEdition(_editionNumber: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "tokenURIEdition",
      "tokenURIEdition(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  mint(_to: Address, _editionNumber: BigInt): BigInt {
    let result = super.call("mint", "mint(address,uint256):(uint256)", [
      ethereum.Value.fromAddress(_to),
      ethereum.Value.fromUnsignedBigInt(_editionNumber)
    ]);

    return result[0].toBigInt();
  }

  try_mint(_to: Address, _editionNumber: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mint", "mint(address,uint256):(uint256)", [
      ethereum.Value.fromAddress(_to),
      ethereum.Value.fromUnsignedBigInt(_editionNumber)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalNumberAvailable(): BigInt {
    let result = super.call(
      "totalNumberAvailable",
      "totalNumberAvailable():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalNumberAvailable(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalNumberAvailable",
      "totalNumberAvailable():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  priceInWeiEdition(_editionNumber: BigInt): BigInt {
    let result = super.call(
      "priceInWeiEdition",
      "priceInWeiEdition(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );

    return result[0].toBigInt();
  }

  try_priceInWeiEdition(_editionNumber: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "priceInWeiEdition",
      "priceInWeiEdition(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenBaseURI(): string {
    let result = super.call("tokenBaseURI", "tokenBaseURI():(string)", []);

    return result[0].toString();
  }

  try_tokenBaseURI(): ethereum.CallResult<string> {
    let result = super.tryCall("tokenBaseURI", "tokenBaseURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  exists(_tokenId: BigInt): boolean {
    let result = super.call("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBoolean();
  }

  try_exists(_tokenId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenByIndex(_index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(_index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  editionType(_editionNumber: BigInt): BigInt {
    let result = super.call("editionType", "editionType(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_editionNumber)
    ]);

    return result[0].toBigInt();
  }

  try_editionType(_editionNumber: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "editionType",
      "editionType(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokensOf(_owner: Address): Array<BigInt> {
    let result = super.call("tokensOf", "tokensOf(address):(uint256[])", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigIntArray();
  }

  try_tokensOf(_owner: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall("tokensOf", "tokensOf(address):(uint256[])", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ownerOf(_tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  purchaseDatesEdition(
    _editionNumber: BigInt
  ): KnownOriginV2__purchaseDatesEditionResult {
    let result = super.call(
      "purchaseDatesEdition",
      "purchaseDatesEdition(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );

    return new KnownOriginV2__purchaseDatesEditionResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_purchaseDatesEdition(
    _editionNumber: BigInt
  ): ethereum.CallResult<KnownOriginV2__purchaseDatesEditionResult> {
    let result = super.tryCall(
      "purchaseDatesEdition",
      "purchaseDatesEdition(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new KnownOriginV2__purchaseDatesEditionResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  artistsEditions(_artistsAccount: Address): Array<BigInt> {
    let result = super.call(
      "artistsEditions",
      "artistsEditions(address):(uint256[])",
      [ethereum.Value.fromAddress(_artistsAccount)]
    );

    return result[0].toBigIntArray();
  }

  try_artistsEditions(
    _artistsAccount: Address
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "artistsEditions",
      "artistsEditions(address):(uint256[])",
      [ethereum.Value.fromAddress(_artistsAccount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  totalAvailableEdition(_editionNumber: BigInt): BigInt {
    let result = super.call(
      "totalAvailableEdition",
      "totalAvailableEdition(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );

    return result[0].toBigInt();
  }

  try_totalAvailableEdition(
    _editionNumber: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalAvailableEdition",
      "totalAvailableEdition(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  koCommissionAccount(): Address {
    let result = super.call(
      "koCommissionAccount",
      "koCommissionAccount():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_koCommissionAccount(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "koCommissionAccount",
      "koCommissionAccount():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  detailsOfEdition(
    editionNumber: BigInt
  ): KnownOriginV2__detailsOfEditionResult {
    let result = super.call(
      "detailsOfEdition",
      "detailsOfEdition(uint256):(bytes32,uint256,uint256,uint256,address,uint256,uint256,string,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(editionNumber)]
    );

    return new KnownOriginV2__detailsOfEditionResult(
      result[0].toBytes(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toString(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBoolean()
    );
  }

  try_detailsOfEdition(
    editionNumber: BigInt
  ): ethereum.CallResult<KnownOriginV2__detailsOfEditionResult> {
    let result = super.tryCall(
      "detailsOfEdition",
      "detailsOfEdition(uint256):(bytes32,uint256,uint256,uint256,address,uint256,uint256,string,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new KnownOriginV2__detailsOfEditionResult(
        value[0].toBytes(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toString(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBoolean()
      )
    );
  }

  tokensOfEdition(_editionNumber: BigInt): Array<BigInt> {
    let result = super.call(
      "tokensOfEdition",
      "tokensOfEdition(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );

    return result[0].toBigIntArray();
  }

  try_tokensOfEdition(
    _editionNumber: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "tokensOfEdition",
      "tokensOfEdition(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  underMint(_to: Address, _editionNumber: BigInt): BigInt {
    let result = super.call(
      "underMint",
      "underMint(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_editionNumber)
      ]
    );

    return result[0].toBigInt();
  }

  try_underMint(
    _to: Address,
    _editionNumber: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "underMint",
      "underMint(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_editionNumber)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  editionOfTokenId(_tokenId: BigInt): BigInt {
    let result = super.call(
      "editionOfTokenId",
      "editionOfTokenId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_editionOfTokenId(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "editionOfTokenId",
      "editionOfTokenId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createActiveEdition(
    _editionNumber: BigInt,
    _editionData: Bytes,
    _editionType: BigInt,
    _startDate: BigInt,
    _endDate: BigInt,
    _artistAccount: Address,
    _artistCommission: BigInt,
    _priceInWei: BigInt,
    _tokenURI: string,
    _totalAvailable: BigInt
  ): boolean {
    let result = super.call(
      "createActiveEdition",
      "createActiveEdition(uint256,bytes32,uint256,uint256,uint256,address,uint256,uint256,string,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionNumber),
        ethereum.Value.fromFixedBytes(_editionData),
        ethereum.Value.fromUnsignedBigInt(_editionType),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromAddress(_artistAccount),
        ethereum.Value.fromUnsignedBigInt(_artistCommission),
        ethereum.Value.fromUnsignedBigInt(_priceInWei),
        ethereum.Value.fromString(_tokenURI),
        ethereum.Value.fromUnsignedBigInt(_totalAvailable)
      ]
    );

    return result[0].toBoolean();
  }

  try_createActiveEdition(
    _editionNumber: BigInt,
    _editionData: Bytes,
    _editionType: BigInt,
    _startDate: BigInt,
    _endDate: BigInt,
    _artistAccount: Address,
    _artistCommission: BigInt,
    _priceInWei: BigInt,
    _tokenURI: string,
    _totalAvailable: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "createActiveEdition",
      "createActiveEdition(uint256,bytes32,uint256,uint256,uint256,address,uint256,uint256,string,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionNumber),
        ethereum.Value.fromFixedBytes(_editionData),
        ethereum.Value.fromUnsignedBigInt(_editionType),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromAddress(_artistAccount),
        ethereum.Value.fromUnsignedBigInt(_artistCommission),
        ethereum.Value.fromUnsignedBigInt(_priceInWei),
        ethereum.Value.fromString(_tokenURI),
        ethereum.Value.fromUnsignedBigInt(_totalAvailable)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ROLE_MINTER(): i32 {
    let result = super.call("ROLE_MINTER", "ROLE_MINTER():(uint8)", []);

    return result[0].toI32();
  }

  try_ROLE_MINTER(): ethereum.CallResult<i32> {
    let result = super.tryCall("ROLE_MINTER", "ROLE_MINTER():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  hasRole(_operator: Address, _role: i32): boolean {
    let result = super.call("hasRole", "hasRole(address,uint8):(bool)", [
      ethereum.Value.fromAddress(_operator),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_role))
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(_operator: Address, _role: i32): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(address,uint8):(bool)", [
      ethereum.Value.fromAddress(_operator),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_role))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ROLE_UNDER_MINTER(): i32 {
    let result = super.call(
      "ROLE_UNDER_MINTER",
      "ROLE_UNDER_MINTER():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_ROLE_UNDER_MINTER(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "ROLE_UNDER_MINTER",
      "ROLE_UNDER_MINTER():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  createInactivePreMintedEdition(
    _editionNumber: BigInt,
    _editionData: Bytes,
    _editionType: BigInt,
    _startDate: BigInt,
    _endDate: BigInt,
    _artistAccount: Address,
    _artistCommission: BigInt,
    _priceInWei: BigInt,
    _tokenURI: string,
    _totalSupply: BigInt,
    _totalAvailable: BigInt
  ): boolean {
    let result = super.call(
      "createInactivePreMintedEdition",
      "createInactivePreMintedEdition(uint256,bytes32,uint256,uint256,uint256,address,uint256,uint256,string,uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionNumber),
        ethereum.Value.fromFixedBytes(_editionData),
        ethereum.Value.fromUnsignedBigInt(_editionType),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromAddress(_artistAccount),
        ethereum.Value.fromUnsignedBigInt(_artistCommission),
        ethereum.Value.fromUnsignedBigInt(_priceInWei),
        ethereum.Value.fromString(_tokenURI),
        ethereum.Value.fromUnsignedBigInt(_totalSupply),
        ethereum.Value.fromUnsignedBigInt(_totalAvailable)
      ]
    );

    return result[0].toBoolean();
  }

  try_createInactivePreMintedEdition(
    _editionNumber: BigInt,
    _editionData: Bytes,
    _editionType: BigInt,
    _startDate: BigInt,
    _endDate: BigInt,
    _artistAccount: Address,
    _artistCommission: BigInt,
    _priceInWei: BigInt,
    _tokenURI: string,
    _totalSupply: BigInt,
    _totalAvailable: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "createInactivePreMintedEdition",
      "createInactivePreMintedEdition(uint256,bytes32,uint256,uint256,uint256,address,uint256,uint256,string,uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionNumber),
        ethereum.Value.fromFixedBytes(_editionData),
        ethereum.Value.fromUnsignedBigInt(_editionType),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromAddress(_artistAccount),
        ethereum.Value.fromUnsignedBigInt(_artistCommission),
        ethereum.Value.fromUnsignedBigInt(_priceInWei),
        ethereum.Value.fromString(_tokenURI),
        ethereum.Value.fromUnsignedBigInt(_totalSupply),
        ethereum.Value.fromUnsignedBigInt(_totalAvailable)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  highestEditionNumber(): BigInt {
    let result = super.call(
      "highestEditionNumber",
      "highestEditionNumber():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_highestEditionNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "highestEditionNumber",
      "highestEditionNumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createActivePreMintedEdition(
    _editionNumber: BigInt,
    _editionData: Bytes,
    _editionType: BigInt,
    _startDate: BigInt,
    _endDate: BigInt,
    _artistAccount: Address,
    _artistCommission: BigInt,
    _priceInWei: BigInt,
    _tokenURI: string,
    _totalSupply: BigInt,
    _totalAvailable: BigInt
  ): boolean {
    let result = super.call(
      "createActivePreMintedEdition",
      "createActivePreMintedEdition(uint256,bytes32,uint256,uint256,uint256,address,uint256,uint256,string,uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionNumber),
        ethereum.Value.fromFixedBytes(_editionData),
        ethereum.Value.fromUnsignedBigInt(_editionType),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromAddress(_artistAccount),
        ethereum.Value.fromUnsignedBigInt(_artistCommission),
        ethereum.Value.fromUnsignedBigInt(_priceInWei),
        ethereum.Value.fromString(_tokenURI),
        ethereum.Value.fromUnsignedBigInt(_totalSupply),
        ethereum.Value.fromUnsignedBigInt(_totalAvailable)
      ]
    );

    return result[0].toBoolean();
  }

  try_createActivePreMintedEdition(
    _editionNumber: BigInt,
    _editionData: Bytes,
    _editionType: BigInt,
    _startDate: BigInt,
    _endDate: BigInt,
    _artistAccount: Address,
    _artistCommission: BigInt,
    _priceInWei: BigInt,
    _tokenURI: string,
    _totalSupply: BigInt,
    _totalAvailable: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "createActivePreMintedEdition",
      "createActivePreMintedEdition(uint256,bytes32,uint256,uint256,uint256,address,uint256,uint256,string,uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionNumber),
        ethereum.Value.fromFixedBytes(_editionData),
        ethereum.Value.fromUnsignedBigInt(_editionType),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromAddress(_artistAccount),
        ethereum.Value.fromUnsignedBigInt(_artistCommission),
        ethereum.Value.fromUnsignedBigInt(_priceInWei),
        ethereum.Value.fromString(_tokenURI),
        ethereum.Value.fromUnsignedBigInt(_totalSupply),
        ethereum.Value.fromUnsignedBigInt(_totalAvailable)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenData(_tokenId: BigInt): KnownOriginV2__tokenDataResult {
    let result = super.call(
      "tokenData",
      "tokenData(uint256):(uint256,uint256,bytes32,string,address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return new KnownOriginV2__tokenDataResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBytes(),
      result[3].toString(),
      result[4].toAddress()
    );
  }

  try_tokenData(
    _tokenId: BigInt
  ): ethereum.CallResult<KnownOriginV2__tokenDataResult> {
    let result = super.tryCall(
      "tokenData",
      "tokenData(uint256):(uint256,uint256,bytes32,string,address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new KnownOriginV2__tokenDataResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBytes(),
        value[3].toString(),
        value[4].toAddress()
      )
    );
  }

  totalSupplyEdition(_editionNumber: BigInt): BigInt {
    let result = super.call(
      "totalSupplyEdition",
      "totalSupplyEdition(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );

    return result[0].toBigInt();
  }

  try_totalSupplyEdition(_editionNumber: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalSupplyEdition",
      "totalSupplyEdition(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  purchaseDatesToken(
    _tokenId: BigInt
  ): KnownOriginV2__purchaseDatesTokenResult {
    let result = super.call(
      "purchaseDatesToken",
      "purchaseDatesToken(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return new KnownOriginV2__purchaseDatesTokenResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_purchaseDatesToken(
    _tokenId: BigInt
  ): ethereum.CallResult<KnownOriginV2__purchaseDatesTokenResult> {
    let result = super.tryCall(
      "purchaseDatesToken",
      "purchaseDatesToken(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new KnownOriginV2__purchaseDatesTokenResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  editionActive(_editionNumber: BigInt): boolean {
    let result = super.call("editionActive", "editionActive(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_editionNumber)
    ]);

    return result[0].toBoolean();
  }

  try_editionActive(_editionNumber: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "editionActive",
      "editionActive(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalRemaining(_editionNumber: BigInt): BigInt {
    let result = super.call(
      "totalRemaining",
      "totalRemaining(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );

    return result[0].toBigInt();
  }

  try_totalRemaining(_editionNumber: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalRemaining",
      "totalRemaining(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ROLE_KNOWN_ORIGIN(): i32 {
    let result = super.call(
      "ROLE_KNOWN_ORIGIN",
      "ROLE_KNOWN_ORIGIN():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_ROLE_KNOWN_ORIGIN(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "ROLE_KNOWN_ORIGIN",
      "ROLE_KNOWN_ORIGIN():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  editionExists(_editionNumber: BigInt): boolean {
    let result = super.call("editionExists", "editionExists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_editionNumber)
    ]);

    return result[0].toBoolean();
  }

  try_editionExists(_editionNumber: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "editionExists",
      "editionExists(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  editionOptionalCommission(
    _editionNumber: BigInt
  ): KnownOriginV2__editionOptionalCommissionResult {
    let result = super.call(
      "editionOptionalCommission",
      "editionOptionalCommission(uint256):(uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );

    return new KnownOriginV2__editionOptionalCommissionResult(
      result[0].toBigInt(),
      result[1].toAddress()
    );
  }

  try_editionOptionalCommission(
    _editionNumber: BigInt
  ): ethereum.CallResult<KnownOriginV2__editionOptionalCommissionResult> {
    let result = super.tryCall(
      "editionOptionalCommission",
      "editionOptionalCommission(uint256):(uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(_editionNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new KnownOriginV2__editionOptionalCommissionResult(
        value[0].toBigInt(),
        value[1].toAddress()
      )
    );
  }

  createInactiveEdition(
    _editionNumber: BigInt,
    _editionData: Bytes,
    _editionType: BigInt,
    _startDate: BigInt,
    _endDate: BigInt,
    _artistAccount: Address,
    _artistCommission: BigInt,
    _priceInWei: BigInt,
    _tokenURI: string,
    _totalAvailable: BigInt
  ): boolean {
    let result = super.call(
      "createInactiveEdition",
      "createInactiveEdition(uint256,bytes32,uint256,uint256,uint256,address,uint256,uint256,string,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionNumber),
        ethereum.Value.fromFixedBytes(_editionData),
        ethereum.Value.fromUnsignedBigInt(_editionType),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromAddress(_artistAccount),
        ethereum.Value.fromUnsignedBigInt(_artistCommission),
        ethereum.Value.fromUnsignedBigInt(_priceInWei),
        ethereum.Value.fromString(_tokenURI),
        ethereum.Value.fromUnsignedBigInt(_totalAvailable)
      ]
    );

    return result[0].toBoolean();
  }

  try_createInactiveEdition(
    _editionNumber: BigInt,
    _editionData: Bytes,
    _editionType: BigInt,
    _startDate: BigInt,
    _endDate: BigInt,
    _artistAccount: Address,
    _artistCommission: BigInt,
    _priceInWei: BigInt,
    _tokenURI: string,
    _totalAvailable: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "createInactiveEdition",
      "createInactiveEdition(uint256,bytes32,uint256,uint256,uint256,address,uint256,uint256,string,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionNumber),
        ethereum.Value.fromFixedBytes(_editionData),
        ethereum.Value.fromUnsignedBigInt(_editionType),
        ethereum.Value.fromUnsignedBigInt(_startDate),
        ethereum.Value.fromUnsignedBigInt(_endDate),
        ethereum.Value.fromAddress(_artistAccount),
        ethereum.Value.fromUnsignedBigInt(_artistCommission),
        ethereum.Value.fromUnsignedBigInt(_priceInWei),
        ethereum.Value.fromString(_tokenURI),
        ethereum.Value.fromUnsignedBigInt(_totalAvailable)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  editionsOfType(_type: BigInt): Array<BigInt> {
    let result = super.call(
      "editionsOfType",
      "editionsOfType(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_type)]
    );

    return result[0].toBigIntArray();
  }

  try_editionsOfType(_type: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "editionsOfType",
      "editionsOfType(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_type)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  isApprovedForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalNumberMinted(): BigInt {
    let result = super.call(
      "totalNumberMinted",
      "totalNumberMinted():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalNumberMinted(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalNumberMinted",
      "totalNumberMinted():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURISafe(_tokenId: BigInt): string {
    let result = super.call("tokenURISafe", "tokenURISafe(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURISafe(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "tokenURISafe",
      "tokenURISafe(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class UpdateActiveCall extends ethereum.Call {
  get inputs(): UpdateActiveCall__Inputs {
    return new UpdateActiveCall__Inputs(this);
  }

  get outputs(): UpdateActiveCall__Outputs {
    return new UpdateActiveCall__Outputs(this);
  }
}

export class UpdateActiveCall__Inputs {
  _call: UpdateActiveCall;

  constructor(call: UpdateActiveCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _active(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class UpdateActiveCall__Outputs {
  _call: UpdateActiveCall;

  constructor(call: UpdateActiveCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class SetTokenURICall extends ethereum.Call {
  get inputs(): SetTokenURICall__Inputs {
    return new SetTokenURICall__Inputs(this);
  }

  get outputs(): SetTokenURICall__Outputs {
    return new SetTokenURICall__Outputs(this);
  }
}

export class SetTokenURICall__Inputs {
  _call: SetTokenURICall;

  constructor(call: SetTokenURICall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _uri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenURICall__Outputs {
  _call: SetTokenURICall;

  constructor(call: SetTokenURICall) {
    this._call = call;
  }
}

export class UpdateKoCommissionAccountCall extends ethereum.Call {
  get inputs(): UpdateKoCommissionAccountCall__Inputs {
    return new UpdateKoCommissionAccountCall__Inputs(this);
  }

  get outputs(): UpdateKoCommissionAccountCall__Outputs {
    return new UpdateKoCommissionAccountCall__Outputs(this);
  }
}

export class UpdateKoCommissionAccountCall__Inputs {
  _call: UpdateKoCommissionAccountCall;

  constructor(call: UpdateKoCommissionAccountCall) {
    this._call = call;
  }

  get _koCommissionAccount(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateKoCommissionAccountCall__Outputs {
  _call: UpdateKoCommissionAccountCall;

  constructor(call: UpdateKoCommissionAccountCall) {
    this._call = call;
  }
}

export class UpdateTokenBaseURICall extends ethereum.Call {
  get inputs(): UpdateTokenBaseURICall__Inputs {
    return new UpdateTokenBaseURICall__Inputs(this);
  }

  get outputs(): UpdateTokenBaseURICall__Outputs {
    return new UpdateTokenBaseURICall__Outputs(this);
  }
}

export class UpdateTokenBaseURICall__Inputs {
  _call: UpdateTokenBaseURICall;

  constructor(call: UpdateTokenBaseURICall) {
    this._call = call;
  }

  get _newBaseURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateTokenBaseURICall__Outputs {
  _call: UpdateTokenBaseURICall;

  constructor(call: UpdateTokenBaseURICall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class UpdateStartDateCall extends ethereum.Call {
  get inputs(): UpdateStartDateCall__Inputs {
    return new UpdateStartDateCall__Inputs(this);
  }

  get outputs(): UpdateStartDateCall__Outputs {
    return new UpdateStartDateCall__Outputs(this);
  }
}

export class UpdateStartDateCall__Inputs {
  _call: UpdateStartDateCall;

  constructor(call: UpdateStartDateCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateStartDateCall__Outputs {
  _call: UpdateStartDateCall;

  constructor(call: UpdateStartDateCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class AddAddressToAccessControlCall extends ethereum.Call {
  get inputs(): AddAddressToAccessControlCall__Inputs {
    return new AddAddressToAccessControlCall__Inputs(this);
  }

  get outputs(): AddAddressToAccessControlCall__Outputs {
    return new AddAddressToAccessControlCall__Outputs(this);
  }
}

export class AddAddressToAccessControlCall__Inputs {
  _call: AddAddressToAccessControlCall;

  constructor(call: AddAddressToAccessControlCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _role(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class AddAddressToAccessControlCall__Outputs {
  _call: AddAddressToAccessControlCall;

  constructor(call: AddAddressToAccessControlCall) {
    this._call = call;
  }
}

export class UpdateArtistCommissionCall extends ethereum.Call {
  get inputs(): UpdateArtistCommissionCall__Inputs {
    return new UpdateArtistCommissionCall__Inputs(this);
  }

  get outputs(): UpdateArtistCommissionCall__Outputs {
    return new UpdateArtistCommissionCall__Outputs(this);
  }
}

export class UpdateArtistCommissionCall__Inputs {
  _call: UpdateArtistCommissionCall;

  constructor(call: UpdateArtistCommissionCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _rate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateArtistCommissionCall__Outputs {
  _call: UpdateArtistCommissionCall;

  constructor(call: UpdateArtistCommissionCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class UpdateEditionTokenURICall extends ethereum.Call {
  get inputs(): UpdateEditionTokenURICall__Inputs {
    return new UpdateEditionTokenURICall__Inputs(this);
  }

  get outputs(): UpdateEditionTokenURICall__Outputs {
    return new UpdateEditionTokenURICall__Outputs(this);
  }
}

export class UpdateEditionTokenURICall__Inputs {
  _call: UpdateEditionTokenURICall;

  constructor(call: UpdateEditionTokenURICall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _uri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateEditionTokenURICall__Outputs {
  _call: UpdateEditionTokenURICall;

  constructor(call: UpdateEditionTokenURICall) {
    this._call = call;
  }
}

export class UnderMintCall extends ethereum.Call {
  get inputs(): UnderMintCall__Inputs {
    return new UnderMintCall__Inputs(this);
  }

  get outputs(): UnderMintCall__Outputs {
    return new UnderMintCall__Outputs(this);
  }
}

export class UnderMintCall__Inputs {
  _call: UnderMintCall;

  constructor(call: UnderMintCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnderMintCall__Outputs {
  _call: UnderMintCall;

  constructor(call: UnderMintCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class UpdatePriceInWeiCall extends ethereum.Call {
  get inputs(): UpdatePriceInWeiCall__Inputs {
    return new UpdatePriceInWeiCall__Inputs(this);
  }

  get outputs(): UpdatePriceInWeiCall__Outputs {
    return new UpdatePriceInWeiCall__Outputs(this);
  }
}

export class UpdatePriceInWeiCall__Inputs {
  _call: UpdatePriceInWeiCall;

  constructor(call: UpdatePriceInWeiCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _priceInWei(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdatePriceInWeiCall__Outputs {
  _call: UpdatePriceInWeiCall;

  constructor(call: UpdatePriceInWeiCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PurchaseToCall extends ethereum.Call {
  get inputs(): PurchaseToCall__Inputs {
    return new PurchaseToCall__Inputs(this);
  }

  get outputs(): PurchaseToCall__Outputs {
    return new PurchaseToCall__Outputs(this);
  }
}

export class PurchaseToCall__Inputs {
  _call: PurchaseToCall;

  constructor(call: PurchaseToCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class PurchaseToCall__Outputs {
  _call: PurchaseToCall;

  constructor(call: PurchaseToCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateActiveEditionCall extends ethereum.Call {
  get inputs(): CreateActiveEditionCall__Inputs {
    return new CreateActiveEditionCall__Inputs(this);
  }

  get outputs(): CreateActiveEditionCall__Outputs {
    return new CreateActiveEditionCall__Outputs(this);
  }
}

export class CreateActiveEditionCall__Inputs {
  _call: CreateActiveEditionCall;

  constructor(call: CreateActiveEditionCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _editionData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _editionType(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _artistAccount(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _artistCommission(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _priceInWei(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _tokenURI(): string {
    return this._call.inputValues[8].value.toString();
  }

  get _totalAvailable(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }
}

export class CreateActiveEditionCall__Outputs {
  _call: CreateActiveEditionCall;

  constructor(call: CreateActiveEditionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RemoveAddressFromAccessControlCall extends ethereum.Call {
  get inputs(): RemoveAddressFromAccessControlCall__Inputs {
    return new RemoveAddressFromAccessControlCall__Inputs(this);
  }

  get outputs(): RemoveAddressFromAccessControlCall__Outputs {
    return new RemoveAddressFromAccessControlCall__Outputs(this);
  }
}

export class RemoveAddressFromAccessControlCall__Inputs {
  _call: RemoveAddressFromAccessControlCall;

  constructor(call: RemoveAddressFromAccessControlCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _role(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class RemoveAddressFromAccessControlCall__Outputs {
  _call: RemoveAddressFromAccessControlCall;

  constructor(call: RemoveAddressFromAccessControlCall) {
    this._call = call;
  }
}

export class UpdateOptionalCommissionCall extends ethereum.Call {
  get inputs(): UpdateOptionalCommissionCall__Inputs {
    return new UpdateOptionalCommissionCall__Inputs(this);
  }

  get outputs(): UpdateOptionalCommissionCall__Outputs {
    return new UpdateOptionalCommissionCall__Outputs(this);
  }
}

export class UpdateOptionalCommissionCall__Inputs {
  _call: UpdateOptionalCommissionCall;

  constructor(call: UpdateOptionalCommissionCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _rate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class UpdateOptionalCommissionCall__Outputs {
  _call: UpdateOptionalCommissionCall;

  constructor(call: UpdateOptionalCommissionCall) {
    this._call = call;
  }
}

export class CreateInactivePreMintedEditionCall extends ethereum.Call {
  get inputs(): CreateInactivePreMintedEditionCall__Inputs {
    return new CreateInactivePreMintedEditionCall__Inputs(this);
  }

  get outputs(): CreateInactivePreMintedEditionCall__Outputs {
    return new CreateInactivePreMintedEditionCall__Outputs(this);
  }
}

export class CreateInactivePreMintedEditionCall__Inputs {
  _call: CreateInactivePreMintedEditionCall;

  constructor(call: CreateInactivePreMintedEditionCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _editionData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _editionType(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _artistAccount(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _artistCommission(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _priceInWei(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _tokenURI(): string {
    return this._call.inputValues[8].value.toString();
  }

  get _totalSupply(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get _totalAvailable(): BigInt {
    return this._call.inputValues[10].value.toBigInt();
  }
}

export class CreateInactivePreMintedEditionCall__Outputs {
  _call: CreateInactivePreMintedEditionCall;

  constructor(call: CreateInactivePreMintedEditionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ReclaimEtherCall extends ethereum.Call {
  get inputs(): ReclaimEtherCall__Inputs {
    return new ReclaimEtherCall__Inputs(this);
  }

  get outputs(): ReclaimEtherCall__Outputs {
    return new ReclaimEtherCall__Outputs(this);
  }
}

export class ReclaimEtherCall__Inputs {
  _call: ReclaimEtherCall;

  constructor(call: ReclaimEtherCall) {
    this._call = call;
  }
}

export class ReclaimEtherCall__Outputs {
  _call: ReclaimEtherCall;

  constructor(call: ReclaimEtherCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class BatchTransferCall extends ethereum.Call {
  get inputs(): BatchTransferCall__Inputs {
    return new BatchTransferCall__Inputs(this);
  }

  get outputs(): BatchTransferCall__Outputs {
    return new BatchTransferCall__Outputs(this);
  }
}

export class BatchTransferCall__Inputs {
  _call: BatchTransferCall;

  constructor(call: BatchTransferCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class BatchTransferCall__Outputs {
  _call: BatchTransferCall;

  constructor(call: BatchTransferCall) {
    this._call = call;
  }
}

export class CreateActivePreMintedEditionCall extends ethereum.Call {
  get inputs(): CreateActivePreMintedEditionCall__Inputs {
    return new CreateActivePreMintedEditionCall__Inputs(this);
  }

  get outputs(): CreateActivePreMintedEditionCall__Outputs {
    return new CreateActivePreMintedEditionCall__Outputs(this);
  }
}

export class CreateActivePreMintedEditionCall__Inputs {
  _call: CreateActivePreMintedEditionCall;

  constructor(call: CreateActivePreMintedEditionCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _editionData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _editionType(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _artistAccount(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _artistCommission(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _priceInWei(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _tokenURI(): string {
    return this._call.inputValues[8].value.toString();
  }

  get _totalSupply(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get _totalAvailable(): BigInt {
    return this._call.inputValues[10].value.toBigInt();
  }
}

export class CreateActivePreMintedEditionCall__Outputs {
  _call: CreateActivePreMintedEditionCall;

  constructor(call: CreateActivePreMintedEditionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdateArtistsAccountCall extends ethereum.Call {
  get inputs(): UpdateArtistsAccountCall__Inputs {
    return new UpdateArtistsAccountCall__Inputs(this);
  }

  get outputs(): UpdateArtistsAccountCall__Outputs {
    return new UpdateArtistsAccountCall__Outputs(this);
  }
}

export class UpdateArtistsAccountCall__Inputs {
  _call: UpdateArtistsAccountCall;

  constructor(call: UpdateArtistsAccountCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _artistAccount(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdateArtistsAccountCall__Outputs {
  _call: UpdateArtistsAccountCall;

  constructor(call: UpdateArtistsAccountCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class UpdateTotalAvailableCall extends ethereum.Call {
  get inputs(): UpdateTotalAvailableCall__Inputs {
    return new UpdateTotalAvailableCall__Inputs(this);
  }

  get outputs(): UpdateTotalAvailableCall__Outputs {
    return new UpdateTotalAvailableCall__Outputs(this);
  }
}

export class UpdateTotalAvailableCall__Inputs {
  _call: UpdateTotalAvailableCall;

  constructor(call: UpdateTotalAvailableCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _totalAvailable(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateTotalAvailableCall__Outputs {
  _call: UpdateTotalAvailableCall;

  constructor(call: UpdateTotalAvailableCall) {
    this._call = call;
  }
}

export class UpdateEditionTypeCall extends ethereum.Call {
  get inputs(): UpdateEditionTypeCall__Inputs {
    return new UpdateEditionTypeCall__Inputs(this);
  }

  get outputs(): UpdateEditionTypeCall__Outputs {
    return new UpdateEditionTypeCall__Outputs(this);
  }
}

export class UpdateEditionTypeCall__Inputs {
  _call: UpdateEditionTypeCall;

  constructor(call: UpdateEditionTypeCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _editionType(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateEditionTypeCall__Outputs {
  _call: UpdateEditionTypeCall;

  constructor(call: UpdateEditionTypeCall) {
    this._call = call;
  }
}

export class UpdateEndDateCall extends ethereum.Call {
  get inputs(): UpdateEndDateCall__Inputs {
    return new UpdateEndDateCall__Inputs(this);
  }

  get outputs(): UpdateEndDateCall__Outputs {
    return new UpdateEndDateCall__Outputs(this);
  }
}

export class UpdateEndDateCall__Inputs {
  _call: UpdateEndDateCall;

  constructor(call: UpdateEndDateCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateEndDateCall__Outputs {
  _call: UpdateEndDateCall;

  constructor(call: UpdateEndDateCall) {
    this._call = call;
  }
}

export class CreateInactiveEditionCall extends ethereum.Call {
  get inputs(): CreateInactiveEditionCall__Inputs {
    return new CreateInactiveEditionCall__Inputs(this);
  }

  get outputs(): CreateInactiveEditionCall__Outputs {
    return new CreateInactiveEditionCall__Outputs(this);
  }
}

export class CreateInactiveEditionCall__Inputs {
  _call: CreateInactiveEditionCall;

  constructor(call: CreateInactiveEditionCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _editionData(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _editionType(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _artistAccount(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _artistCommission(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _priceInWei(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _tokenURI(): string {
    return this._call.inputValues[8].value.toString();
  }

  get _totalAvailable(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }
}

export class CreateInactiveEditionCall__Outputs {
  _call: CreateInactiveEditionCall;

  constructor(call: CreateInactiveEditionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class PurchaseCall extends ethereum.Call {
  get inputs(): PurchaseCall__Inputs {
    return new PurchaseCall__Inputs(this);
  }

  get outputs(): PurchaseCall__Outputs {
    return new PurchaseCall__Outputs(this);
  }
}

export class PurchaseCall__Inputs {
  _call: PurchaseCall;

  constructor(call: PurchaseCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PurchaseCall__Outputs {
  _call: PurchaseCall;

  constructor(call: PurchaseCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class BatchTransferFromCall extends ethereum.Call {
  get inputs(): BatchTransferFromCall__Inputs {
    return new BatchTransferFromCall__Inputs(this);
  }

  get outputs(): BatchTransferFromCall__Outputs {
    return new BatchTransferFromCall__Outputs(this);
  }
}

export class BatchTransferFromCall__Inputs {
  _call: BatchTransferFromCall;

  constructor(call: BatchTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class BatchTransferFromCall__Outputs {
  _call: BatchTransferFromCall;

  constructor(call: BatchTransferFromCall) {
    this._call = call;
  }
}

export class UpdateTotalSupplyCall extends ethereum.Call {
  get inputs(): UpdateTotalSupplyCall__Inputs {
    return new UpdateTotalSupplyCall__Inputs(this);
  }

  get outputs(): UpdateTotalSupplyCall__Outputs {
    return new UpdateTotalSupplyCall__Outputs(this);
  }
}

export class UpdateTotalSupplyCall__Inputs {
  _call: UpdateTotalSupplyCall;

  constructor(call: UpdateTotalSupplyCall) {
    this._call = call;
  }

  get _editionNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _totalSupply(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateTotalSupplyCall__Outputs {
  _call: UpdateTotalSupplyCall;

  constructor(call: UpdateTotalSupplyCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}
