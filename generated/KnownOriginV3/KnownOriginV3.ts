// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdditionalMetaDataSet extends ethereum.Event {
  get params(): AdditionalMetaDataSet__Params {
    return new AdditionalMetaDataSet__Params(this);
  }
}

export class AdditionalMetaDataSet__Params {
  _event: AdditionalMetaDataSet;

  constructor(event: AdditionalMetaDataSet) {
    this._event = event;
  }

  get _editionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AdminArtistAccountReported extends ethereum.Event {
  get params(): AdminArtistAccountReported__Params {
    return new AdminArtistAccountReported__Params(this);
  }
}

export class AdminArtistAccountReported__Params {
  _event: AdminArtistAccountReported;

  constructor(event: AdminArtistAccountReported) {
    this._event = event;
  }

  get _account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _reported(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class AdminEditionReported extends ethereum.Event {
  get params(): AdminEditionReported__Params {
    return new AdminEditionReported__Params(this);
  }
}

export class AdminEditionReported__Params {
  _event: AdminEditionReported;

  constructor(event: AdminEditionReported) {
    this._event = event;
  }

  get _editionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _reported(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class AdminRoyaltiesRegistryProxySet extends ethereum.Event {
  get params(): AdminRoyaltiesRegistryProxySet__Params {
    return new AdminRoyaltiesRegistryProxySet__Params(this);
  }
}

export class AdminRoyaltiesRegistryProxySet__Params {
  _event: AdminRoyaltiesRegistryProxySet;

  constructor(event: AdminRoyaltiesRegistryProxySet) {
    this._event = event;
  }

  get _royaltiesRegistryProxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AdminTokenUriResolverSet extends ethereum.Event {
  get params(): AdminTokenUriResolverSet__Params {
    return new AdminTokenUriResolverSet__Params(this);
  }
}

export class AdminTokenUriResolverSet__Params {
  _event: AdminTokenUriResolverSet;

  constructor(event: AdminTokenUriResolverSet) {
    this._event = event;
  }

  get _tokenUriResolver(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AdminUpdateMinBidAmount extends ethereum.Event {
  get params(): AdminUpdateMinBidAmount__Params {
    return new AdminUpdateMinBidAmount__Params(this);
  }
}

export class AdminUpdateMinBidAmount__Params {
  _event: AdminUpdateMinBidAmount;

  constructor(event: AdminUpdateMinBidAmount) {
    this._event = event;
  }

  get _minBidAmount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AdminUpdateModulo extends ethereum.Event {
  get params(): AdminUpdateModulo__Params {
    return new AdminUpdateModulo__Params(this);
  }
}

export class AdminUpdateModulo__Params {
  _event: AdminUpdateModulo;

  constructor(event: AdminUpdateModulo) {
    this._event = event;
  }

  get _modulo(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AdminUpdatePlatformPrimarySaleCommission extends ethereum.Event {
  get params(): AdminUpdatePlatformPrimarySaleCommission__Params {
    return new AdminUpdatePlatformPrimarySaleCommission__Params(this);
  }
}

export class AdminUpdatePlatformPrimarySaleCommission__Params {
  _event: AdminUpdatePlatformPrimarySaleCommission;

  constructor(event: AdminUpdatePlatformPrimarySaleCommission) {
    this._event = event;
  }

  get _platformPrimarySaleCommission(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AdminUpdateSecondaryRoyalty extends ethereum.Event {
  get params(): AdminUpdateSecondaryRoyalty__Params {
    return new AdminUpdateSecondaryRoyalty__Params(this);
  }
}

export class AdminUpdateSecondaryRoyalty__Params {
  _event: AdminUpdateSecondaryRoyalty;

  constructor(event: AdminUpdateSecondaryRoyalty) {
    this._event = event;
  }

  get _secondarySaleRoyalty(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AdminUpdateSecondarySaleCommission extends ethereum.Event {
  get params(): AdminUpdateSecondarySaleCommission__Params {
    return new AdminUpdateSecondarySaleCommission__Params(this);
  }
}

export class AdminUpdateSecondarySaleCommission__Params {
  _event: AdminUpdateSecondarySaleCommission;

  constructor(event: AdminUpdateSecondarySaleCommission) {
    this._event = event;
  }

  get _platformSecondarySaleCommission(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ConsecutiveTransfer extends ethereum.Event {
  get params(): ConsecutiveTransfer__Params {
    return new ConsecutiveTransfer__Params(this);
  }
}

export class ConsecutiveTransfer__Params {
  _event: ConsecutiveTransfer;

  constructor(event: ConsecutiveTransfer) {
    this._event = event;
  }

  get fromTokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get toTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fromAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get toAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class KnownOriginV3__facilitateNextPrimarySaleResult {
  value0: Address;
  value1: Address;
  value2: BigInt;

  constructor(value0: Address, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class KnownOriginV3__getEditionDetailsResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: string;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    return map;
  }
}

export class KnownOriginV3__royaltyAndCreatorInfoResult {
  value0: Address;
  value1: Address;
  value2: BigInt;

  constructor(value0: Address, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class KnownOriginV3__royaltyInfoResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class KnownOriginV3 extends ethereum.SmartContract {
  static bind(address: Address): KnownOriginV3 {
    return new KnownOriginV3("KnownOriginV3", address);
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MAX_EDITION_ID(): BigInt {
    let result = super.call("MAX_EDITION_ID", "MAX_EDITION_ID():(uint96)", []);

    return result[0].toBigInt();
  }

  try_MAX_EDITION_ID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_EDITION_ID",
      "MAX_EDITION_ID():(uint96)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_EDITION_SIZE(): BigInt {
    let result = super.call(
      "MAX_EDITION_SIZE",
      "MAX_EDITION_SIZE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_EDITION_SIZE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_EDITION_SIZE",
      "MAX_EDITION_SIZE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MINT_BATCH_TYPEHASH(): Bytes {
    let result = super.call(
      "MINT_BATCH_TYPEHASH",
      "MINT_BATCH_TYPEHASH():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MINT_BATCH_TYPEHASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MINT_BATCH_TYPEHASH",
      "MINT_BATCH_TYPEHASH():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PERMIT_TYPEHASH(): Bytes {
    let result = super.call(
      "PERMIT_TYPEHASH",
      "PERMIT_TYPEHASH():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_PERMIT_TYPEHASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "PERMIT_TYPEHASH",
      "PERMIT_TYPEHASH():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  accessControls(): Address {
    let result = super.call("accessControls", "accessControls():(address)", []);

    return result[0].toAddress();
  }

  try_accessControls(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "accessControls",
      "accessControls():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  additionalEditionMetaData(param0: BigInt): string {
    let result = super.call(
      "additionalEditionMetaData",
      "additionalEditionMetaData(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toString();
  }

  try_additionalEditionMetaData(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "additionalEditionMetaData",
      "additionalEditionMetaData(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  editionAdditionalMetaData(_editionId: BigInt): string {
    let result = super.call(
      "editionAdditionalMetaData",
      "editionAdditionalMetaData(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );

    return result[0].toString();
  }

  try_editionAdditionalMetaData(
    _editionId: BigInt
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "editionAdditionalMetaData",
      "editionAdditionalMetaData(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  editionExists(_editionId: BigInt): boolean {
    let result = super.call("editionExists", "editionExists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_editionId)
    ]);

    return result[0].toBoolean();
  }

  try_editionExists(_editionId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "editionExists",
      "editionExists(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  editionPointer(): BigInt {
    let result = super.call("editionPointer", "editionPointer():(uint256)", []);

    return result[0].toBigInt();
  }

  try_editionPointer(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "editionPointer",
      "editionPointer():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  editionURI(_editionId: BigInt): string {
    let result = super.call("editionURI", "editionURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_editionId)
    ]);

    return result[0].toString();
  }

  try_editionURI(_editionId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("editionURI", "editionURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_editionId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  exists(_tokenId: BigInt): boolean {
    let result = super.call("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBoolean();
  }

  try_exists(_tokenId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  facilitateNextPrimarySale(
    _editionId: BigInt
  ): KnownOriginV3__facilitateNextPrimarySaleResult {
    let result = super.call(
      "facilitateNextPrimarySale",
      "facilitateNextPrimarySale(uint256):(address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );

    return new KnownOriginV3__facilitateNextPrimarySaleResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  try_facilitateNextPrimarySale(
    _editionId: BigInt
  ): ethereum.CallResult<KnownOriginV3__facilitateNextPrimarySaleResult> {
    let result = super.tryCall(
      "facilitateNextPrimarySale",
      "facilitateNextPrimarySale(uint256):(address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new KnownOriginV3__facilitateNextPrimarySaleResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt()
      )
    );
  }

  getApproved(_tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getChainId(): BigInt {
    let result = super.call("getChainId", "getChainId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getChainId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getChainId", "getChainId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCreatorOfEdition(_editionId: BigInt): Address {
    let result = super.call(
      "getCreatorOfEdition",
      "getCreatorOfEdition(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );

    return result[0].toAddress();
  }

  try_getCreatorOfEdition(_editionId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCreatorOfEdition",
      "getCreatorOfEdition(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCreatorOfToken(_tokenId: BigInt): Address {
    let result = super.call(
      "getCreatorOfToken",
      "getCreatorOfToken(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toAddress();
  }

  try_getCreatorOfToken(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCreatorOfToken",
      "getCreatorOfToken(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getEditionDetails(_tokenId: BigInt): KnownOriginV3__getEditionDetailsResult {
    let result = super.call(
      "getEditionDetails",
      "getEditionDetails(uint256):(address,address,uint256,uint256,string)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return new KnownOriginV3__getEditionDetailsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toString()
    );
  }

  try_getEditionDetails(
    _tokenId: BigInt
  ): ethereum.CallResult<KnownOriginV3__getEditionDetailsResult> {
    let result = super.tryCall(
      "getEditionDetails",
      "getEditionDetails(uint256):(address,address,uint256,uint256,string)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new KnownOriginV3__getEditionDetailsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toString()
      )
    );
  }

  getEditionIdOfToken(_tokenId: BigInt): BigInt {
    let result = super.call(
      "getEditionIdOfToken",
      "getEditionIdOfToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getEditionIdOfToken(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEditionIdOfToken",
      "getEditionIdOfToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEditionSizeOfToken(_tokenId: BigInt): BigInt {
    let result = super.call(
      "getEditionSizeOfToken",
      "getEditionSizeOfToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getEditionSizeOfToken(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEditionSizeOfToken",
      "getEditionSizeOfToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNextAvailablePrimarySaleToken(_editionId: BigInt): BigInt {
    let result = super.call(
      "getNextAvailablePrimarySaleToken",
      "getNextAvailablePrimarySaleToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );

    return result[0].toBigInt();
  }

  try_getNextAvailablePrimarySaleToken(
    _editionId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNextAvailablePrimarySaleToken",
      "getNextAvailablePrimarySaleToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSizeOfEdition(_editionId: BigInt): BigInt {
    let result = super.call(
      "getSizeOfEdition",
      "getSizeOfEdition(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );

    return result[0].toBigInt();
  }

  try_getSizeOfEdition(_editionId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSizeOfEdition",
      "getSizeOfEdition(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hadPrimarySaleOfToken(_tokenId: BigInt): boolean {
    let result = super.call(
      "hadPrimarySaleOfToken",
      "hadPrimarySaleOfToken(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBoolean();
  }

  try_hadPrimarySaleOfToken(_tokenId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hadPrimarySaleOfToken",
      "hadPrimarySaleOfToken(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxTokenIdOfEdition(_editionId: BigInt): BigInt {
    let result = super.call(
      "maxTokenIdOfEdition",
      "maxTokenIdOfEdition(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );

    return result[0].toBigInt();
  }

  try_maxTokenIdOfEdition(_editionId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxTokenIdOfEdition",
      "maxTokenIdOfEdition(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minBidAmount(): BigInt {
    let result = super.call("minBidAmount", "minBidAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minBidAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minBidAmount", "minBidAmount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mintBatchEdition(_editionSize: BigInt, _to: Address, _uri: string): BigInt {
    let result = super.call(
      "mintBatchEdition",
      "mintBatchEdition(uint256,address,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionSize),
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromString(_uri)
      ]
    );

    return result[0].toBigInt();
  }

  try_mintBatchEdition(
    _editionSize: BigInt,
    _to: Address,
    _uri: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mintBatchEdition",
      "mintBatchEdition(uint256,address,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionSize),
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromString(_uri)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mintConsecutiveBatchEdition(
    _editionSize: BigInt,
    _to: Address,
    _uri: string
  ): BigInt {
    let result = super.call(
      "mintConsecutiveBatchEdition",
      "mintConsecutiveBatchEdition(uint256,address,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionSize),
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromString(_uri)
      ]
    );

    return result[0].toBigInt();
  }

  try_mintConsecutiveBatchEdition(
    _editionSize: BigInt,
    _to: Address,
    _uri: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mintConsecutiveBatchEdition",
      "mintConsecutiveBatchEdition(uint256,address,string):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_editionSize),
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromString(_uri)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mintToken(_to: Address, _uri: string): BigInt {
    let result = super.call(
      "mintToken",
      "mintToken(address,string):(uint256)",
      [ethereum.Value.fromAddress(_to), ethereum.Value.fromString(_uri)]
    );

    return result[0].toBigInt();
  }

  try_mintToken(_to: Address, _uri: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mintToken",
      "mintToken(address,string):(uint256)",
      [ethereum.Value.fromAddress(_to), ethereum.Value.fromString(_uri)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mintingNonces(param0: Address): BigInt {
    let result = super.call(
      "mintingNonces",
      "mintingNonces(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_mintingNonces(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mintingNonces",
      "mintingNonces(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  modulo(): BigInt {
    let result = super.call("modulo", "modulo():(uint256)", []);

    return result[0].toBigInt();
  }

  try_modulo(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("modulo", "modulo():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nonces(param0: Address): BigInt {
    let result = super.call("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_nonces(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ownerOf(_tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  platformPrimarySaleCommission(): BigInt {
    let result = super.call(
      "platformPrimarySaleCommission",
      "platformPrimarySaleCommission():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_platformPrimarySaleCommission(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "platformPrimarySaleCommission",
      "platformPrimarySaleCommission():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  platformSecondarySaleCommission(): BigInt {
    let result = super.call(
      "platformSecondarySaleCommission",
      "platformSecondarySaleCommission():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_platformSecondarySaleCommission(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "platformSecondarySaleCommission",
      "platformSecondarySaleCommission():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  reportedArtistAccounts(param0: Address): boolean {
    let result = super.call(
      "reportedArtistAccounts",
      "reportedArtistAccounts(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_reportedArtistAccounts(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "reportedArtistAccounts",
      "reportedArtistAccounts(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  reportedEditionIds(param0: BigInt): boolean {
    let result = super.call(
      "reportedEditionIds",
      "reportedEditionIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_reportedEditionIds(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "reportedEditionIds",
      "reportedEditionIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  royaltiesRegistryProxy(): Address {
    let result = super.call(
      "royaltiesRegistryProxy",
      "royaltiesRegistryProxy():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_royaltiesRegistryProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "royaltiesRegistryProxy",
      "royaltiesRegistryProxy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  royaltyAndCreatorInfo(
    _editionId: BigInt
  ): KnownOriginV3__royaltyAndCreatorInfoResult {
    let result = super.call(
      "royaltyAndCreatorInfo",
      "royaltyAndCreatorInfo(uint256):(address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );

    return new KnownOriginV3__royaltyAndCreatorInfoResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  try_royaltyAndCreatorInfo(
    _editionId: BigInt
  ): ethereum.CallResult<KnownOriginV3__royaltyAndCreatorInfoResult> {
    let result = super.tryCall(
      "royaltyAndCreatorInfo",
      "royaltyAndCreatorInfo(uint256):(address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_editionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new KnownOriginV3__royaltyAndCreatorInfoResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt()
      )
    );
  }

  royaltyInfo(_tokenId: BigInt): KnownOriginV3__royaltyInfoResult {
    let result = super.call(
      "royaltyInfo",
      "royaltyInfo(uint256):(address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return new KnownOriginV3__royaltyInfoResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_royaltyInfo(
    _tokenId: BigInt
  ): ethereum.CallResult<KnownOriginV3__royaltyInfoResult> {
    let result = super.tryCall(
      "royaltyInfo",
      "royaltyInfo(uint256):(address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new KnownOriginV3__royaltyInfoResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  royaltyRegistryActive(): boolean {
    let result = super.call(
      "royaltyRegistryActive",
      "royaltyRegistryActive():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_royaltyRegistryActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "royaltyRegistryActive",
      "royaltyRegistryActive():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  secondarySaleRoyalty(): BigInt {
    let result = super.call(
      "secondarySaleRoyalty",
      "secondarySaleRoyalty():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_secondarySaleRoyalty(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "secondarySaleRoyalty",
      "secondarySaleRoyalty():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenAdditionalMetaData(_tokenId: BigInt): string {
    let result = super.call(
      "tokenAdditionalMetaData",
      "tokenAdditionalMetaData(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toString();
  }

  try_tokenAdditionalMetaData(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "tokenAdditionalMetaData",
      "tokenAdditionalMetaData(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenUriResolver(): Address {
    let result = super.call(
      "tokenUriResolver",
      "tokenUriResolver():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_tokenUriResolver(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenUriResolver",
      "tokenUriResolver():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenUriResolverActive(): boolean {
    let result = super.call(
      "tokenUriResolverActive",
      "tokenUriResolverActive():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_tokenUriResolverActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "tokenUriResolverActive",
      "tokenUriResolverActive():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _accessControls(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _royaltiesRegistryProxy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _editionPointer(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _approved(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BatchTransferFromCall extends ethereum.Call {
  get inputs(): BatchTransferFromCall__Inputs {
    return new BatchTransferFromCall__Inputs(this);
  }

  get outputs(): BatchTransferFromCall__Outputs {
    return new BatchTransferFromCall__Outputs(this);
  }
}

export class BatchTransferFromCall__Inputs {
  _call: BatchTransferFromCall;

  constructor(call: BatchTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class BatchTransferFromCall__Outputs {
  _call: BatchTransferFromCall;

  constructor(call: BatchTransferFromCall) {
    this._call = call;
  }
}

export class ConsecutiveBatchTransferFromCall extends ethereum.Call {
  get inputs(): ConsecutiveBatchTransferFromCall__Inputs {
    return new ConsecutiveBatchTransferFromCall__Inputs(this);
  }

  get outputs(): ConsecutiveBatchTransferFromCall__Outputs {
    return new ConsecutiveBatchTransferFromCall__Outputs(this);
  }
}

export class ConsecutiveBatchTransferFromCall__Inputs {
  _call: ConsecutiveBatchTransferFromCall;

  constructor(call: ConsecutiveBatchTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _fromTokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _toTokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ConsecutiveBatchTransferFromCall__Outputs {
  _call: ConsecutiveBatchTransferFromCall;

  constructor(call: ConsecutiveBatchTransferFromCall) {
    this._call = call;
  }
}

export class FacilitateNextPrimarySaleCall extends ethereum.Call {
  get inputs(): FacilitateNextPrimarySaleCall__Inputs {
    return new FacilitateNextPrimarySaleCall__Inputs(this);
  }

  get outputs(): FacilitateNextPrimarySaleCall__Outputs {
    return new FacilitateNextPrimarySaleCall__Outputs(this);
  }
}

export class FacilitateNextPrimarySaleCall__Inputs {
  _call: FacilitateNextPrimarySaleCall;

  constructor(call: FacilitateNextPrimarySaleCall) {
    this._call = call;
  }

  get _editionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FacilitateNextPrimarySaleCall__Outputs {
  _call: FacilitateNextPrimarySaleCall;

  constructor(call: FacilitateNextPrimarySaleCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get creator(): Address {
    return this._call.outputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class LockInAdditionalMetaDataCall extends ethereum.Call {
  get inputs(): LockInAdditionalMetaDataCall__Inputs {
    return new LockInAdditionalMetaDataCall__Inputs(this);
  }

  get outputs(): LockInAdditionalMetaDataCall__Outputs {
    return new LockInAdditionalMetaDataCall__Outputs(this);
  }
}

export class LockInAdditionalMetaDataCall__Inputs {
  _call: LockInAdditionalMetaDataCall;

  constructor(call: LockInAdditionalMetaDataCall) {
    this._call = call;
  }

  get _editionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get metadata(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class LockInAdditionalMetaDataCall__Outputs {
  _call: LockInAdditionalMetaDataCall;

  constructor(call: LockInAdditionalMetaDataCall) {
    this._call = call;
  }
}

export class MintBatchEditionCall extends ethereum.Call {
  get inputs(): MintBatchEditionCall__Inputs {
    return new MintBatchEditionCall__Inputs(this);
  }

  get outputs(): MintBatchEditionCall__Outputs {
    return new MintBatchEditionCall__Outputs(this);
  }
}

export class MintBatchEditionCall__Inputs {
  _call: MintBatchEditionCall;

  constructor(call: MintBatchEditionCall) {
    this._call = call;
  }

  get _editionSize(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _uri(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class MintBatchEditionCall__Outputs {
  _call: MintBatchEditionCall;

  constructor(call: MintBatchEditionCall) {
    this._call = call;
  }

  get _editionId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MintConsecutiveBatchEditionCall extends ethereum.Call {
  get inputs(): MintConsecutiveBatchEditionCall__Inputs {
    return new MintConsecutiveBatchEditionCall__Inputs(this);
  }

  get outputs(): MintConsecutiveBatchEditionCall__Outputs {
    return new MintConsecutiveBatchEditionCall__Outputs(this);
  }
}

export class MintConsecutiveBatchEditionCall__Inputs {
  _call: MintConsecutiveBatchEditionCall;

  constructor(call: MintConsecutiveBatchEditionCall) {
    this._call = call;
  }

  get _editionSize(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _uri(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class MintConsecutiveBatchEditionCall__Outputs {
  _call: MintConsecutiveBatchEditionCall;

  constructor(call: MintConsecutiveBatchEditionCall) {
    this._call = call;
  }

  get _editionId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MintTokenCall extends ethereum.Call {
  get inputs(): MintTokenCall__Inputs {
    return new MintTokenCall__Inputs(this);
  }

  get outputs(): MintTokenCall__Outputs {
    return new MintTokenCall__Outputs(this);
  }
}

export class MintTokenCall__Inputs {
  _call: MintTokenCall;

  constructor(call: MintTokenCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _uri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class MintTokenCall__Outputs {
  _call: MintTokenCall;

  constructor(call: MintTokenCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PermitCall extends ethereum.Call {
  get inputs(): PermitCall__Inputs {
    return new PermitCall__Inputs(this);
  }

  get outputs(): PermitCall__Outputs {
    return new PermitCall__Outputs(this);
  }
}

export class PermitCall__Inputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class PermitCall__Outputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }
}

export class ReportEditionIdCall extends ethereum.Call {
  get inputs(): ReportEditionIdCall__Inputs {
    return new ReportEditionIdCall__Inputs(this);
  }

  get outputs(): ReportEditionIdCall__Outputs {
    return new ReportEditionIdCall__Outputs(this);
  }
}

export class ReportEditionIdCall__Inputs {
  _call: ReportEditionIdCall;

  constructor(call: ReportEditionIdCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _reported(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ReportEditionIdCall__Outputs {
  _call: ReportEditionIdCall;

  constructor(call: ReportEditionIdCall) {
    this._call = call;
  }
}

export class ReportEditionId1Call extends ethereum.Call {
  get inputs(): ReportEditionId1Call__Inputs {
    return new ReportEditionId1Call__Inputs(this);
  }

  get outputs(): ReportEditionId1Call__Outputs {
    return new ReportEditionId1Call__Outputs(this);
  }
}

export class ReportEditionId1Call__Inputs {
  _call: ReportEditionId1Call;

  constructor(call: ReportEditionId1Call) {
    this._call = call;
  }

  get _editionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _reported(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ReportEditionId1Call__Outputs {
  _call: ReportEditionId1Call;

  constructor(call: ReportEditionId1Call) {
    this._call = call;
  }
}

export class RoyaltyAndCreatorInfoCall extends ethereum.Call {
  get inputs(): RoyaltyAndCreatorInfoCall__Inputs {
    return new RoyaltyAndCreatorInfoCall__Inputs(this);
  }

  get outputs(): RoyaltyAndCreatorInfoCall__Outputs {
    return new RoyaltyAndCreatorInfoCall__Outputs(this);
  }
}

export class RoyaltyAndCreatorInfoCall__Inputs {
  _call: RoyaltyAndCreatorInfoCall;

  constructor(call: RoyaltyAndCreatorInfoCall) {
    this._call = call;
  }

  get _editionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RoyaltyAndCreatorInfoCall__Outputs {
  _call: RoyaltyAndCreatorInfoCall;

  constructor(call: RoyaltyAndCreatorInfoCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get creator(): Address {
    return this._call.outputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.outputValues[2].value.toBigInt();
  }
}

export class RoyaltyInfoCall extends ethereum.Call {
  get inputs(): RoyaltyInfoCall__Inputs {
    return new RoyaltyInfoCall__Inputs(this);
  }

  get outputs(): RoyaltyInfoCall__Outputs {
    return new RoyaltyInfoCall__Outputs(this);
  }
}

export class RoyaltyInfoCall__Inputs {
  _call: RoyaltyInfoCall;

  constructor(call: RoyaltyInfoCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RoyaltyInfoCall__Outputs {
  _call: RoyaltyInfoCall;

  constructor(call: RoyaltyInfoCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetRoyaltiesRegistryProxyCall extends ethereum.Call {
  get inputs(): SetRoyaltiesRegistryProxyCall__Inputs {
    return new SetRoyaltiesRegistryProxyCall__Inputs(this);
  }

  get outputs(): SetRoyaltiesRegistryProxyCall__Outputs {
    return new SetRoyaltiesRegistryProxyCall__Outputs(this);
  }
}

export class SetRoyaltiesRegistryProxyCall__Inputs {
  _call: SetRoyaltiesRegistryProxyCall;

  constructor(call: SetRoyaltiesRegistryProxyCall) {
    this._call = call;
  }

  get _royaltiesRegistryProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRoyaltiesRegistryProxyCall__Outputs {
  _call: SetRoyaltiesRegistryProxyCall;

  constructor(call: SetRoyaltiesRegistryProxyCall) {
    this._call = call;
  }
}

export class SetTokenUriResolverCall extends ethereum.Call {
  get inputs(): SetTokenUriResolverCall__Inputs {
    return new SetTokenUriResolverCall__Inputs(this);
  }

  get outputs(): SetTokenUriResolverCall__Outputs {
    return new SetTokenUriResolverCall__Outputs(this);
  }
}

export class SetTokenUriResolverCall__Inputs {
  _call: SetTokenUriResolverCall;

  constructor(call: SetTokenUriResolverCall) {
    this._call = call;
  }

  get _tokenUriResolver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTokenUriResolverCall__Outputs {
  _call: SetTokenUriResolverCall;

  constructor(call: SetTokenUriResolverCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class UpdateMinBidAmountCall extends ethereum.Call {
  get inputs(): UpdateMinBidAmountCall__Inputs {
    return new UpdateMinBidAmountCall__Inputs(this);
  }

  get outputs(): UpdateMinBidAmountCall__Outputs {
    return new UpdateMinBidAmountCall__Outputs(this);
  }
}

export class UpdateMinBidAmountCall__Inputs {
  _call: UpdateMinBidAmountCall;

  constructor(call: UpdateMinBidAmountCall) {
    this._call = call;
  }

  get _minBidAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMinBidAmountCall__Outputs {
  _call: UpdateMinBidAmountCall;

  constructor(call: UpdateMinBidAmountCall) {
    this._call = call;
  }
}

export class UpdateModuloCall extends ethereum.Call {
  get inputs(): UpdateModuloCall__Inputs {
    return new UpdateModuloCall__Inputs(this);
  }

  get outputs(): UpdateModuloCall__Outputs {
    return new UpdateModuloCall__Outputs(this);
  }
}

export class UpdateModuloCall__Inputs {
  _call: UpdateModuloCall;

  constructor(call: UpdateModuloCall) {
    this._call = call;
  }

  get _modulo(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateModuloCall__Outputs {
  _call: UpdateModuloCall;

  constructor(call: UpdateModuloCall) {
    this._call = call;
  }
}

export class UpdatePlatformPrimarySaleCommissionCall extends ethereum.Call {
  get inputs(): UpdatePlatformPrimarySaleCommissionCall__Inputs {
    return new UpdatePlatformPrimarySaleCommissionCall__Inputs(this);
  }

  get outputs(): UpdatePlatformPrimarySaleCommissionCall__Outputs {
    return new UpdatePlatformPrimarySaleCommissionCall__Outputs(this);
  }
}

export class UpdatePlatformPrimarySaleCommissionCall__Inputs {
  _call: UpdatePlatformPrimarySaleCommissionCall;

  constructor(call: UpdatePlatformPrimarySaleCommissionCall) {
    this._call = call;
  }

  get _platformPrimarySaleCommission(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdatePlatformPrimarySaleCommissionCall__Outputs {
  _call: UpdatePlatformPrimarySaleCommissionCall;

  constructor(call: UpdatePlatformPrimarySaleCommissionCall) {
    this._call = call;
  }
}

export class UpdatePlatformSecondarySaleCommissionCall extends ethereum.Call {
  get inputs(): UpdatePlatformSecondarySaleCommissionCall__Inputs {
    return new UpdatePlatformSecondarySaleCommissionCall__Inputs(this);
  }

  get outputs(): UpdatePlatformSecondarySaleCommissionCall__Outputs {
    return new UpdatePlatformSecondarySaleCommissionCall__Outputs(this);
  }
}

export class UpdatePlatformSecondarySaleCommissionCall__Inputs {
  _call: UpdatePlatformSecondarySaleCommissionCall;

  constructor(call: UpdatePlatformSecondarySaleCommissionCall) {
    this._call = call;
  }

  get _platformSecondarySaleCommission(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdatePlatformSecondarySaleCommissionCall__Outputs {
  _call: UpdatePlatformSecondarySaleCommissionCall;

  constructor(call: UpdatePlatformSecondarySaleCommissionCall) {
    this._call = call;
  }
}

export class UpdateSecondaryRoyaltyCall extends ethereum.Call {
  get inputs(): UpdateSecondaryRoyaltyCall__Inputs {
    return new UpdateSecondaryRoyaltyCall__Inputs(this);
  }

  get outputs(): UpdateSecondaryRoyaltyCall__Outputs {
    return new UpdateSecondaryRoyaltyCall__Outputs(this);
  }
}

export class UpdateSecondaryRoyaltyCall__Inputs {
  _call: UpdateSecondaryRoyaltyCall;

  constructor(call: UpdateSecondaryRoyaltyCall) {
    this._call = call;
  }

  get _secondarySaleRoyalty(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateSecondaryRoyaltyCall__Outputs {
  _call: UpdateSecondaryRoyaltyCall;

  constructor(call: UpdateSecondaryRoyaltyCall) {
    this._call = call;
  }
}

export class WithdrawStuckEtherCall extends ethereum.Call {
  get inputs(): WithdrawStuckEtherCall__Inputs {
    return new WithdrawStuckEtherCall__Inputs(this);
  }

  get outputs(): WithdrawStuckEtherCall__Outputs {
    return new WithdrawStuckEtherCall__Outputs(this);
  }
}

export class WithdrawStuckEtherCall__Inputs {
  _call: WithdrawStuckEtherCall;

  constructor(call: WithdrawStuckEtherCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _withdrawalAccount(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class WithdrawStuckEtherCall__Outputs {
  _call: WithdrawStuckEtherCall;

  constructor(call: WithdrawStuckEtherCall) {
    this._call = call;
  }
}

export class WithdrawStuckEther1Call extends ethereum.Call {
  get inputs(): WithdrawStuckEther1Call__Inputs {
    return new WithdrawStuckEther1Call__Inputs(this);
  }

  get outputs(): WithdrawStuckEther1Call__Outputs {
    return new WithdrawStuckEther1Call__Outputs(this);
  }
}

export class WithdrawStuckEther1Call__Inputs {
  _call: WithdrawStuckEther1Call;

  constructor(call: WithdrawStuckEther1Call) {
    this._call = call;
  }

  get _withdrawalAccount(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawStuckEther1Call__Outputs {
  _call: WithdrawStuckEther1Call;

  constructor(call: WithdrawStuckEther1Call) {
    this._call = call;
  }
}
