// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class BidPlaced extends EthereumEvent {
  get params(): BidPlaced__Params {
    return new BidPlaced__Params(this);
  }
}

export class BidPlaced__Params {
  _event: BidPlaced;

  constructor(event: BidPlaced) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _currentOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BidWithdrawn extends EthereumEvent {
  get params(): BidWithdrawn__Params {
    return new BidWithdrawn__Params(this);
  }
}

export class BidWithdrawn__Params {
  _event: BidWithdrawn;

  constructor(event: BidWithdrawn) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BidAccepted extends EthereumEvent {
  get params(): BidAccepted__Params {
    return new BidAccepted__Params(this);
  }
}

export class BidAccepted__Params {
  _event: BidAccepted;

  constructor(event: BidAccepted) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _currentOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BidRejected extends EthereumEvent {
  get params(): BidRejected__Params {
    return new BidRejected__Params(this);
  }
}

export class BidRejected__Params {
  _event: BidRejected;

  constructor(event: BidRejected) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _currentOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class AuctionEnabled extends EthereumEvent {
  get params(): AuctionEnabled__Params {
    return new AuctionEnabled__Params(this);
  }
}

export class AuctionEnabled__Params {
  _event: AuctionEnabled;

  constructor(event: AuctionEnabled) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _auctioneer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AuctionDisabled extends EthereumEvent {
  get params(): AuctionDisabled__Params {
    return new AuctionDisabled__Params(this);
  }
}

export class AuctionDisabled__Params {
  _event: AuctionDisabled;

  constructor(event: AuctionDisabled) {
    this._event = event;
  }

  get _tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _auctioneer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Pause extends EthereumEvent {
  get params(): Pause__Params {
    return new Pause__Params(this);
  }
}

export class Pause__Params {
  _event: Pause;

  constructor(event: Pause) {
    this._event = event;
  }
}

export class Unpause extends EthereumEvent {
  get params(): Unpause__Params {
    return new Unpause__Params(this);
  }
}

export class Unpause__Params {
  _event: Unpause;

  constructor(event: Unpause) {
    this._event = event;
  }
}

export class RoleAdded extends EthereumEvent {
  get params(): RoleAdded__Params {
    return new RoleAdded__Params(this);
  }
}

export class RoleAdded__Params {
  _event: RoleAdded;

  constructor(event: RoleAdded) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class RoleRemoved extends EthereumEvent {
  get params(): RoleRemoved__Params {
    return new RoleRemoved__Params(this);
  }
}

export class RoleRemoved__Params {
  _event: RoleRemoved;

  constructor(event: RoleRemoved) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OwnershipRenounced extends EthereumEvent {
  get params(): OwnershipRenounced__Params {
    return new OwnershipRenounced__Params(this);
  }
}

export class OwnershipRenounced__Params {
  _event: OwnershipRenounced;

  constructor(event: OwnershipRenounced) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends EthereumEvent {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokenMarketplace__tokenOfferResult {
  value0: Address;
  value1: BigInt;
  value2: Address;
  value3: boolean;
  value4: boolean;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: Address,
    value3: boolean,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromAddress(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigInt(this.value1));
    map.set("value2", EthereumValue.fromAddress(this.value2));
    map.set("value3", EthereumValue.fromBoolean(this.value3));
    map.set("value4", EthereumValue.fromBoolean(this.value4));
    return map;
  }
}

export class TokenMarketplace extends SmartContract {
  static bind(address: Address): TokenMarketplace {
    return new TokenMarketplace("TokenMarketplace", address);
  }

  ROLE_WHITELISTED(): string {
    let result = super.call("ROLE_WHITELISTED", []);

    return result[0].toString();
  }

  try_ROLE_WHITELISTED(): CallResult<string> {
    let result = super.tryCall("ROLE_WHITELISTED", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toString());
  }

  hasRole(_operator: Address, _role: string): boolean {
    let result = super.call("hasRole", [
      EthereumValue.fromAddress(_operator),
      EthereumValue.fromString(_role)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(_operator: Address, _role: string): CallResult<boolean> {
    let result = super.tryCall("hasRole", [
      EthereumValue.fromAddress(_operator),
      EthereumValue.fromString(_role)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  minBidAmount(): BigInt {
    let result = super.call("minBidAmount", []);

    return result[0].toBigInt();
  }

  try_minBidAmount(): CallResult<BigInt> {
    let result = super.tryCall("minBidAmount", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", []);

    return result[0].toBoolean();
  }

  try_paused(): CallResult<boolean> {
    let result = super.tryCall("paused", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  defaultKOPercentage(): BigInt {
    let result = super.call("defaultKOPercentage", []);

    return result[0].toBigInt();
  }

  try_defaultKOPercentage(): CallResult<BigInt> {
    let result = super.tryCall("defaultKOPercentage", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  koCommissionAccount(): Address {
    let result = super.call("koCommissionAccount", []);

    return result[0].toAddress();
  }

  try_koCommissionAccount(): CallResult<Address> {
    let result = super.tryCall("koCommissionAccount", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  whitelist(_operator: Address): boolean {
    let result = super.call("whitelist", [
      EthereumValue.fromAddress(_operator)
    ]);

    return result[0].toBoolean();
  }

  try_whitelist(_operator: Address): CallResult<boolean> {
    let result = super.tryCall("whitelist", [
      EthereumValue.fromAddress(_operator)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  defaultArtistRoyaltyPercentage(): BigInt {
    let result = super.call("defaultArtistRoyaltyPercentage", []);

    return result[0].toBigInt();
  }

  try_defaultArtistRoyaltyPercentage(): CallResult<BigInt> {
    let result = super.tryCall("defaultArtistRoyaltyPercentage", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }

  kodaAddress(): Address {
    let result = super.call("kodaAddress", []);

    return result[0].toAddress();
  }

  try_kodaAddress(): CallResult<Address> {
    let result = super.tryCall("kodaAddress", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  tokenOffer(_tokenId: BigInt): TokenMarketplace__tokenOfferResult {
    let result = super.call("tokenOffer", [
      EthereumValue.fromUnsignedBigInt(_tokenId)
    ]);

    return new TokenMarketplace__tokenOfferResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toBoolean(),
      result[4].toBoolean()
    );
  }

  try_tokenOffer(
    _tokenId: BigInt
  ): CallResult<TokenMarketplace__tokenOfferResult> {
    let result = super.tryCall("tokenOffer", [
      EthereumValue.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new TokenMarketplace__tokenOfferResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toBoolean(),
        value[4].toBoolean()
      )
    );
  }
}

export class RemoveAddressesFromWhitelistCall extends EthereumCall {
  get inputs(): RemoveAddressesFromWhitelistCall__Inputs {
    return new RemoveAddressesFromWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveAddressesFromWhitelistCall__Outputs {
    return new RemoveAddressesFromWhitelistCall__Outputs(this);
  }
}

export class RemoveAddressesFromWhitelistCall__Inputs {
  _call: RemoveAddressesFromWhitelistCall;

  constructor(call: RemoveAddressesFromWhitelistCall) {
    this._call = call;
  }

  get _operators(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RemoveAddressesFromWhitelistCall__Outputs {
  _call: RemoveAddressesFromWhitelistCall;

  constructor(call: RemoveAddressesFromWhitelistCall) {
    this._call = call;
  }
}

export class RemoveAddressFromWhitelistCall extends EthereumCall {
  get inputs(): RemoveAddressFromWhitelistCall__Inputs {
    return new RemoveAddressFromWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveAddressFromWhitelistCall__Outputs {
    return new RemoveAddressFromWhitelistCall__Outputs(this);
  }
}

export class RemoveAddressFromWhitelistCall__Inputs {
  _call: RemoveAddressFromWhitelistCall;

  constructor(call: RemoveAddressFromWhitelistCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveAddressFromWhitelistCall__Outputs {
  _call: RemoveAddressFromWhitelistCall;

  constructor(call: RemoveAddressFromWhitelistCall) {
    this._call = call;
  }
}

export class UnpauseCall extends EthereumCall {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends EthereumCall {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class AddAddressToWhitelistCall extends EthereumCall {
  get inputs(): AddAddressToWhitelistCall__Inputs {
    return new AddAddressToWhitelistCall__Inputs(this);
  }

  get outputs(): AddAddressToWhitelistCall__Outputs {
    return new AddAddressToWhitelistCall__Outputs(this);
  }
}

export class AddAddressToWhitelistCall__Inputs {
  _call: AddAddressToWhitelistCall;

  constructor(call: AddAddressToWhitelistCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAddressToWhitelistCall__Outputs {
  _call: AddAddressToWhitelistCall;

  constructor(call: AddAddressToWhitelistCall) {
    this._call = call;
  }
}

export class PauseCall extends EthereumCall {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class AddAddressesToWhitelistCall extends EthereumCall {
  get inputs(): AddAddressesToWhitelistCall__Inputs {
    return new AddAddressesToWhitelistCall__Inputs(this);
  }

  get outputs(): AddAddressesToWhitelistCall__Outputs {
    return new AddAddressesToWhitelistCall__Outputs(this);
  }
}

export class AddAddressesToWhitelistCall__Inputs {
  _call: AddAddressesToWhitelistCall;

  constructor(call: AddAddressesToWhitelistCall) {
    this._call = call;
  }

  get _operators(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddAddressesToWhitelistCall__Outputs {
  _call: AddAddressesToWhitelistCall;

  constructor(call: AddAddressesToWhitelistCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends EthereumCall {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _kodaAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _koCommissionAccount(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class PlaceBidCall extends EthereumCall {
  get inputs(): PlaceBidCall__Inputs {
    return new PlaceBidCall__Inputs(this);
  }

  get outputs(): PlaceBidCall__Outputs {
    return new PlaceBidCall__Outputs(this);
  }
}

export class PlaceBidCall__Inputs {
  _call: PlaceBidCall;

  constructor(call: PlaceBidCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PlaceBidCall__Outputs {
  _call: PlaceBidCall;

  constructor(call: PlaceBidCall) {
    this._call = call;
  }
}

export class WithdrawBidCall extends EthereumCall {
  get inputs(): WithdrawBidCall__Inputs {
    return new WithdrawBidCall__Inputs(this);
  }

  get outputs(): WithdrawBidCall__Outputs {
    return new WithdrawBidCall__Outputs(this);
  }
}

export class WithdrawBidCall__Inputs {
  _call: WithdrawBidCall;

  constructor(call: WithdrawBidCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawBidCall__Outputs {
  _call: WithdrawBidCall;

  constructor(call: WithdrawBidCall) {
    this._call = call;
  }
}

export class RejectBidCall extends EthereumCall {
  get inputs(): RejectBidCall__Inputs {
    return new RejectBidCall__Inputs(this);
  }

  get outputs(): RejectBidCall__Outputs {
    return new RejectBidCall__Outputs(this);
  }
}

export class RejectBidCall__Inputs {
  _call: RejectBidCall;

  constructor(call: RejectBidCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RejectBidCall__Outputs {
  _call: RejectBidCall;

  constructor(call: RejectBidCall) {
    this._call = call;
  }
}

export class AcceptBidCall extends EthereumCall {
  get inputs(): AcceptBidCall__Inputs {
    return new AcceptBidCall__Inputs(this);
  }

  get outputs(): AcceptBidCall__Outputs {
    return new AcceptBidCall__Outputs(this);
  }
}

export class AcceptBidCall__Inputs {
  _call: AcceptBidCall;

  constructor(call: AcceptBidCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptBidCall__Outputs {
  _call: AcceptBidCall;

  constructor(call: AcceptBidCall) {
    this._call = call;
  }
}

export class DisableAuctionCall extends EthereumCall {
  get inputs(): DisableAuctionCall__Inputs {
    return new DisableAuctionCall__Inputs(this);
  }

  get outputs(): DisableAuctionCall__Outputs {
    return new DisableAuctionCall__Outputs(this);
  }
}

export class DisableAuctionCall__Inputs {
  _call: DisableAuctionCall;

  constructor(call: DisableAuctionCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DisableAuctionCall__Outputs {
  _call: DisableAuctionCall;

  constructor(call: DisableAuctionCall) {
    this._call = call;
  }
}

export class EnableAuctionCall extends EthereumCall {
  get inputs(): EnableAuctionCall__Inputs {
    return new EnableAuctionCall__Inputs(this);
  }

  get outputs(): EnableAuctionCall__Outputs {
    return new EnableAuctionCall__Outputs(this);
  }
}

export class EnableAuctionCall__Inputs {
  _call: EnableAuctionCall;

  constructor(call: EnableAuctionCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EnableAuctionCall__Outputs {
  _call: EnableAuctionCall;

  constructor(call: EnableAuctionCall) {
    this._call = call;
  }
}

export class SetMinBidAmountCall extends EthereumCall {
  get inputs(): SetMinBidAmountCall__Inputs {
    return new SetMinBidAmountCall__Inputs(this);
  }

  get outputs(): SetMinBidAmountCall__Outputs {
    return new SetMinBidAmountCall__Outputs(this);
  }
}

export class SetMinBidAmountCall__Inputs {
  _call: SetMinBidAmountCall;

  constructor(call: SetMinBidAmountCall) {
    this._call = call;
  }

  get _minBidAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinBidAmountCall__Outputs {
  _call: SetMinBidAmountCall;

  constructor(call: SetMinBidAmountCall) {
    this._call = call;
  }
}

export class SetKodavV2Call extends EthereumCall {
  get inputs(): SetKodavV2Call__Inputs {
    return new SetKodavV2Call__Inputs(this);
  }

  get outputs(): SetKodavV2Call__Outputs {
    return new SetKodavV2Call__Outputs(this);
  }
}

export class SetKodavV2Call__Inputs {
  _call: SetKodavV2Call;

  constructor(call: SetKodavV2Call) {
    this._call = call;
  }

  get _kodaAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetKodavV2Call__Outputs {
  _call: SetKodavV2Call;

  constructor(call: SetKodavV2Call) {
    this._call = call;
  }
}

export class SetKoCommissionAccountCall extends EthereumCall {
  get inputs(): SetKoCommissionAccountCall__Inputs {
    return new SetKoCommissionAccountCall__Inputs(this);
  }

  get outputs(): SetKoCommissionAccountCall__Outputs {
    return new SetKoCommissionAccountCall__Outputs(this);
  }
}

export class SetKoCommissionAccountCall__Inputs {
  _call: SetKoCommissionAccountCall;

  constructor(call: SetKoCommissionAccountCall) {
    this._call = call;
  }

  get _koCommissionAccount(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetKoCommissionAccountCall__Outputs {
  _call: SetKoCommissionAccountCall;

  constructor(call: SetKoCommissionAccountCall) {
    this._call = call;
  }
}
